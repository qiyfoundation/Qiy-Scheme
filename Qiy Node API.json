{
    "swagger": "2.0",
    "info": {
        "version": "0.0.0",
        "title": "Qiy Node API",
        "description": "RESTful API documentation of the [Qiy Node API](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-api).",
        "license": {
	    "name": "Qiy Foundation License for the Qiy Scheme",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/blob/master/LICENSE.md"
        },
        "termsOfService": "https://github.com/qiyfoundation/Qiy-Scheme",
        "contact": {
	    "name": "Work Stream Functionality & Technology",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/projects/2",
            "email": "info@qiyfoundation.org"
        }
    },
    "host": "access.provider.host",
    "basePath": "/qiy-node-implementation/api",
    "schemes": [
        "https"
    ],
    "definitions": {
        "ApiModel": {
            "properties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Api version.",
                    "maxItems": 1,
                    "minItems": 1
                },
                "id": {
                    "description": "[Qiy Node Id](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-id). This property is only included when the request is authenticated.",
                    "type": "string",
                    "maxItems": 1,
                    "minItems": 0
                },
                "links": {
                    "$ref": "#/definitions/ApiLinksModel"
                }
            },
            "required": [
                "currentVersion",
                "links"
            ],
            "type": "object"
        },
        "ApiLinksModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointAddressesModel"
                }
            ]
        },
        "CandidatesModel": {
            "description": "List of Source Candidates.",
	    "items": {
                "description": "Library Provider url of Data Provider that can provide the data.",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "CatalogueModel": {
            "description": "Catalogue details.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
		"links": {
                    "description": "Catalogue links.",
                    "properties": {
		        "provider": {
		            "description": "Published Provider url",
			    "format": "url",
			    "type": "string"
		        },
		        "self": {
		            "description": "Catalogue url",
			    "format": "url",
			    "type": "string"
		        },
                        "services": {
                            "description": "Published Services url (publishedServicesUrl).",
                            "format": "url",
                            "type": "string" 
                        }
		    },
		    "required": [
		        "self",
		        "provider"
		    ],
		    "type": "object"
		},
                "state": {
                    "description": "State of the catalogue.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "CataloguesModel": {
            "description": "List of Catalogues.",
	    "items": {
                "description": "Catalogue url (catalogueUrl)",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "ConnectionsResponseModel": {
            "description": "Response of [Connections Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connections-request).",
            "items": {
                "type": "object",
                "properties": {
                    "result": {
                        "items": {  
                            "$ref": "#/definitions/ConnectionModel"
			},
                        "type": "array"
                    },
                    "links": {
                        "description": "tbd",
			"items": {
				"type": "object"
			},
                        "type": "array"
                    }
                }
            },
            "type": "array"
        },
        "ConnectionModel": {
            "description": "Connection details.",
            "properties": {
                "state": {
                    "description": "State of the connection.",
                    "type": "string"
                },
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "mbox": {
                            "description": "Messagebox Url.",
                            "type": "string",
                            "format": "url"
                        },
                        "references": {
                            "description": "References Url.",
                            "type": "string",
                            "format": "url"
                        },
                        "self": {
                            "description": "Connection Url",
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "required": [
		        "mbox",
		        "references",
		        "self"
                    ]
                }
            },
            "required": [
                "state",
                "activeFrom",
                "activeUntil",
                "links"
            ],
            "type": "object"
        },
        "ConnectTokenDataModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ConnectTokenMetadataModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "json": {
                            "$ref": "#/definitions/ConnectTokenModel"
                        }
                    }
                }
            ],
            "description": "Connect Token details",
            "type": "object"
        },
        "ConnectTokenMetadataModel": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "integer",
                    "description": "Expiration date time.",
                    "format": "Unix time in ms",
                    "minItems": 0,
                    "maxItems": 1
                },
                "name": {
                    "type": "string",
                    "description": "Connect Token name",
                    "minItems": 0,
                    "maxItems": 1
                },
                "note": {
                    "description": "Note",
                    "minItems": 0,
                    "maxItems": 1,
                    "type": "string"
                },
                "useBudget": {
                    "type": "integer",
                    "description": "Maximum number of use times",
                    "maxItems": 1,
                    "minItems": 0
                },
                "actions": {
                    "type": "object",
                    "description": "Instructions to be executed immediately after connecting.",
                    "properties": {
                        "messages": {
                            "description": "Messages",
                            "items": {
                                "$ref": "#/definitions/MessageModel"
                            },
                            "type": "array"
                        }
                    }
                }
            }
        },
        "ConnectTokenModel": {
            "description": "See [Connect Token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token).",
            "properties": {
                "target": {
                    "description": "The [Transport Connect Token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#transport-connect-token).",
                    "type": "string"
                },
                "identifier": {
                    "description": "This property is only used in responses and holds the alias.",
                    "type": "string"
                },
                "tmpSecret": {
                    "type": "string",
                    "description": "Base64-encoded temporary secret.",
                    "format": "Base64-encoded"
                }
            },
            "required": [
                "target",
                "tmpSecret"
	    ],
            "type": "object"
        },
        "ConnectTokenRequestParametersModel": {
	    "allOf": [
	        { "$ref": "#/definitions/ConnectTokenMetadataModel" },
	        {
	            "type": "object",
		    "properties": {
	                "json": {
			    "$ref": "#/definitions/ConnectTokenModel" 
			}
		    }
		}
            ]
        },
        "ConsentModel": {
            "description": "Consent model.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
                "consentedDataSets": {
                    "description": "Consented Data Sets.",
		    "items": {
                        "description": "Data Type url of the consented Data Set.",
                        "format": "url",
                        "type": "string"
		    },
                    "type": "array"
		},
                "dataSources": {
                    "description": "Source Urls of the Data Sources, only accessible for the Data Subject.",
		    "items": {
                        "description": "Source Url of the Data Source",
                        "format": "url",
                        "type": "string"
		    },
                    "type": "array"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "description": "Consent Url",
                            "type": "string",
                            "format": "url"
                        },
                        "subscription": {
                            "description": "Published Service Url of the subscribed Provider service.",
                            "format": "url",
                            "type": "string"
                        }
                    },
                    "required": [
		        "self",
		        "subscription"
                    ]
                },
                "state": {
                    "description": "State of the consent.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "ConsentsModel": {
            "description": "List of Consent Urls.",
	    "items": {
                "description": "Consent url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "DataTypeModel": {
            "description": "Data Type Model.",
            "type": "object"
        },
        "DataTypesModel": {
            "description": "List of Data Types.",
	    "items": {
                "description": "Data Type url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "EndpointAddressesModel": {
            "type": "object",
            "description": "Current path endpoint addresses.",
            "properties": {
                "connections": {
                    "description": "Current address for the 'connections'-endpoint (connectionsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "consents": {
                    "description": "Current address for the 'consents'-endpoint (consentsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "create": {
                    "description": "Current address for the 'create'-endpoint (createEndpoint). This property is only included when the request is not authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ctCreate": {
                    "description": "Current address for the 'connect token create'-endpoint (ctCreateEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ctList": {
                    "description": "Current address for the 'connect token list'-endpoint (ctListEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "delete": {
                    "description": "Current address for the 'delete'-endpoint (deleteEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "events": {
                    "description": "Current address for the 'events'-endpoint (eventsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "library": {
                    "description": "Current address for the 'library'-endpoint (libraryEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "portfolio": {
                    "description": "Current address for the 'portfolio'-endpoint (portfolioEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ref": {
                    "description": "Current address for the 'reference'-endpoint (refEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "refs": {
                    "description": "Current address for the 'references'-endpoint (refsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                }
            }
        },
        "EventStreamModel": {
	    "allOf": [
                {   "$ref": "#/definitions/EventModel" },
                { 
	            "description": "See [Events](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#events).",
	            "format": "Stream of event objects."
		}
            ]
        },
        "EventModel": {
            "description": "Event Model.",
            "type": "object",
            "properties": {
                "connectionUrl": {
                    "description": "Connection Url.",
                    "type": "string",
                    "format": "url"
                },
                "extraData": {
                    "description": "Property for extra event data.",
                    "type": "string"
                },
                "type": {
                    "description": "Event type name.",
                    "type": "string"
                }
            },
	    "required": [
                "connectionUrl",
                "extraData",
                "type"
            ]
        },
        "LibraryModel": {
            "description": "Library model",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "catalogues": {
                            "description": "Catalogues Url (cataloguesUrl)",
                            "type": "string",
                            "format": "url"
                        },
                        "dataTypes": {
                            "description": "Data Types url (dataTypesUrl).",
                            "format": "url",
                            "type": "string"
                        },
                        "providers": {
                            "description": "Library Providers url (libraryProvidersUrl)",
                            "type": "string",
                            "format": "url"
                        },
                        "serviceTypes": {
                            "description": "Service Types url (serviceTypesUrl).",
                            "format": "url",
                            "type": "string"
                        }
                    },
                    "required": [
		        "catalogues",
		        "dataTypes",
		        "providers",
		        "serviceTypes"
                    ]
                },
                "state": {
                    "description": "State of the library.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "LibraryProviderModel": {
            "description": "Library Provider Model.",
            "type": "object"
        },
        "LibraryProvidersModel": {
            "description": "List of Library Providers.",
	    "items": {
                "description": "Library Provider url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "LocationAndLinkModel": {
            "description": "Location and link.",
            "type": "object",
            "properties": {
                "Location": {
                    "description": "Url of the created connection.",
                    "type": "string"
                },
                "Link": {
                    "description": "Link header parameter, containing the mailbox url for the connection.",
                    "type": "string"
                }
            }
        },
        "MailboxMessageModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "inbound": {
                            "type": "boolean",
                            "description": "Whether the received message is inbound or outbound."
                        },
                        "serialNr": {
                            "type": "integer",
                            "description": "Serial number of the message."
                        }
                    },
                    "required": [
		        "inbound",
		        "serialNr"
	            ]
                }
            ]
        },
        "MailboxMessagesModel": {
            "description": "Qiy Node Mailbox messages.",
            "items": {
                "$ref": "#/definitions/MailboxMessageModel"
            },
            "type": "array"
        },
        "MessageModel": {
            "description": "See [Qiy Node Message](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-message).",
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "Application protocol",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "refSerialNr": {
                    "description": "Reference serial number",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "integer",
		    "format": "nullable (NB: See [OpenAPI 2.0 does not support nullable fields](https://github.com/swagger-api/swagger-node/issues/399) and [OpenAPI 3.0 'nullable'-attribute](https://swagger.io/docs/specification/data-models/data-types/#nullable).)"
                },
                "text": {
                    "description": "Subject",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "payload": {
                    "description": "The Base64-encoded payload of the message.",
                    "format": "Base64-encoded",
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "object"
                }
            },
	    "required": [
                "protocol",
                "refSerialNr",
                "text",
                "payload"
            ]
        },
        "OperationReferenceRequestMessageModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "payload": {
                            "properties": {
                                "message_descriptor": {
                                    "type": "string",
                                    "format": "https://code.in.digital-me.nl/DOC/FuncQiy/blob/master/QS%20User%20Node%20Protocol-gitbucket.md#operation-reference-request-message"
                                },
                                "created": {
                                    "description": "Message creation time.",
                                    "type": "integer",
                                    "format": "Unix time in ms"
                                }
                            }
                        },
                        "protocol": {
                            "type": "string",
                            "description": "[Data Descriptor](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-descriptor) to identify the requested data.",
                            "format": "url"
                        }
                    }
                }
            ]
        },
        "OperationSpecificationModel": {
            "type": "object",
            "description": "See [Operation Specification](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-specification).",
            "properties": {
                "body": {
                    "description": "Required body data.",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "object",
                    "format": "not nullable"
                },
                "headers": {
                    "description": "The headers to be used.",
                    "items": {
                        "properties": {
                            "accept": {
                                "description": "Accept header.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 0,
                    "maxItems": 1,
                    "type": "array"
                },
                "method": {
                    "description": "The supported http operation.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "queryParams": {
                    "description": "Required query parameters",
                    "items": {
                        "type": "object"
                    },
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "array"
                },
                "transport": {
                    "description": "The supported transfer protocol.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                },
                "url": {
                    "description": "Resource url",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "PortfolioModel": {
            "description": "Portfolio Model.",
	    "properties": {
                "links": {
                    "type": "object",
                    "properties": {
                        "providers": {
                            "description": "Portfolio (Data) Providers url (portfolioProvidersUrl)",
                            "type": "string",
                            "format": "url"
                        },
                        "services": {
                            "description": "Subscriptions url (subscriptionsUrl).",
                            "format": "url",
                            "type": "string"
                        }
                    }
                }
	    },
            "type": "object"
        },
        "PortfolioProviderModel": {
            "description": "Portfolio Provider Model.",
            "type": "object"
        },
        "PortfolioProvidersModel": {
            "description": "List of Portfolio Providers.",
	    "items": {
                "description": "Portfolio Provider url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "PublishedServiceModel": {
            "description": "Published Service Model.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
		"links": {
                    "description": "Published Service links.",
                    "properties": {
        	        "provider": {
		            "description": "Provider url",
			    "format": "url",
			    "type": "string"
		        },
                        "self": {
		            "description": "Published Service url",
			    "format": "url",
			    "type": "string"
		        },
                        "serviceDescription": {
		            "description": "Service Description url.",
			    "format": "url",
			    "type": "string"
		        },
                        "serviceType": {
		            "description": "Service Type url.",
			    "format": "url",
			    "type": "string"
		        }
		    },
		    "required": [
		        "provider",
		        "self",
			"serviceDescriptor",
			"serviceType"
		    ],
		    "type": "object"
		},
                "state": {
                    "description": "State of the service.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "PublishedServicesModel": {
            "description": "List of Published Services.",
	    "items": {
                "description": "Publised Service url (publishedServiceUrl)",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "QiyNodeCreateRequestParametersModel": {
            "type": "object",
            "properties": {
                "publicKey": {
                    "description": "Public key to be used to authenticate future requests.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                },
                "id": {
                    "description": "Qiy Node id.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                }
            },
            "required": [
                "publicKey",
                "id"
            ]
        },
        "ReferenceModel": {
            "description": "Reference details.",
            "type": "object",
            "properties": {
                "ref": {
                    "description": "Resource reference.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "value": {
                    "description": "Return value of the resource, accessed immediately after the request.",
                    "format": "Base64-encoded",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "connection": {
                    "description": "Connection uri.",
                    "format": "uri",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                }
            }
        },
        "ReferenceModel": {
            "description": "Operation Reference",
            "type": "string"
        },
        "ReferenceResultModel": {
            "description": "Resolved Reference",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data",
                    "type": "string"
                }
            }
        },
        "ReferencesResultModel": {
            "description": "References result.",
            "type": "object",
            "properties": {
                "applicationProtocolUriPatternProperty": {
                    "description": "References with the application protocol uri specified by the name of the object property.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReferenceModel"
                    }
                }
            },
            "uniqueItems": true
        },
        "ServiceCredentialsModel": {
            "description": "Service Credentials Model.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
                "credentials": {
                    "description": "The actual credentials.",
                    "type": "object"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "description": "Source url.",
                            "type": "string",
                            "format": "url"
                        },
                        "self": {
                            "description": "Service Credentials url",
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "required": [
		        "source",
		        "self"
                    ]
                },
		"state": {
                    "description": "State of the Service Credentials.",
                    "type": "string"
                }
            },
            "required": [
                "state",
                "activeFrom",
                "activeUntil",
                "links"
            ],
            "type": "object"
        },
        "ServiceTypeModel": {
            "description": "Service Type Model.",
            "type": "object"
        },
        "ServiceTypesModel": {
            "description": "List of Service Types.",
	    "items": {
                "description": "Service Type url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        },
        "SourceModel": {
            "description": "Source Model.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
 	        "links": {
		    "properties": {
		        "candidates": {
			    "description": "Source Candidates url",
			    "format": "url",
			    "type": "string"
		        },
		        "dataType": {
			    "description": "Data Type url of the consented data.",
			    "format": "url",
			    "type": "string"
		        },
		        "dataProvider": {
			    "description": "Library Provider url of the Data Provider.",
			    "format": "url",
			    "type": "string"
		        },
		        "dataService": {
			    "description": "Published Service url of the Data Service.",
			    "format": "url",
			    "type": "string"
		        },
                        "consent": {
			    "description": "Consent url",
			    "format": "url",
			    "type": "string"
		        },
                        "credentialsRegister": {
			    "description": "Credentials Register url",
			    "format": "url",
			    "type": "string"
		        },
		        "serviceCredentials": {
			    "description": "Service Credentials url",
			    "format": "url",
			    "type": "string"
		        },
		        "self": {
			    "description": "Source url",
			    "format": "url",
			    "type": "string"
		        }
	            },
		    "required": [
	                "candidates",
			"consent",
			"credentialsRegister",
			"self"
		    ],
		    "type": "object"
                },
		"state": {
                    "description": "State of the source.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "SourceUrlModel": {
            "description": "Source url",
            "format": "url",
            "type": "string"
        },
        "SubscriptionModel": {
            "description": "Subscription Model.",
            "properties": {
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
		"links": {
                    "description": "Subscription links.",
                    "properties": {
                        "consents": {
		            "description": "Consents url (consentsUrl).",
			    "format": "url",
			    "type": "string"
		        },
                        "provider": {
		            "description": "Library Provider url (libraryProviderUrl).",
			    "format": "url",
			    "type": "string"
		        },
                        "self": {
		            "description": "Subscription url (subscriptionUrl)",
			    "format": "url",
			    "type": "string"
		        },
                        "service": {
		            "description": "Service url (publishedServiceUrl).",
			    "format": "url",
			    "type": "string"
		        }
		    },
		    "required": [
			"provider",
		        "self",
			"service"
		    ],
		    "type": "object"
		},
                "state": {
                    "description": "State of the service.",
                    "type": "string"
                }
            },
            "required": [
                "activeFrom",
                "activeUntil",
                "links",
                "state"
            ],
            "type": "object"
        },
        "SubscriptionsModel": {
            "description": "List of Subscriptions.",
	    "items": {
                "description": "Subscription url",
                "format": "url",
                "type": "string"
	    },
            "type": "array"
        }
    },
    "parameters": {
        "authorizationParam": {
            "name": "Authorization",
            "in": "header",
            "description": "See [Authorization Header Parameter](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#authorization-header-parameter).",
            "required": true,
            "type": "string",
            "format": "QTF [Qiy Node id] [Unix time in ms]:[signature]"
        },
        "authorizationOptionalParam": {
            "name": "Authorization",
            "in": "header",
            "description": "See [Authorization Header Parameter](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#authorization-header-parameter).",
            "required": false,
            "type": "string",
            "format": "QTF [Qiy Node id] [Unix time in ms]:[signature]"
        },
        "idParam": {
            "name": "id",
            "in": "query",
            "description": "id parameter.",
            "required": true,
            "type": "string"
        },
        "sinceParam": {
            "name": "since",
            "in": "query",
            "description": "Limit results to period after date=time stamp 'since'.",
            "required": false,
            "type": "integer",
            "format": "Unix time in ms"
        }
    },
    "paths": {
        "/api": {
            "get": {
                "summary": "API information",
                "description": "Get api information and current endpoint addresses. Use this request daily to remain operational, see [Dynamic Path Endpoint Addresses](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#dynamic-path-endpoint-addresses) for more information.",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationOptionalParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfull response",
                        "schema": {
                            "$ref": "#/definitions/ApiModel"
                        }
                    }
                },
                "tags": [
                    "PathEndpointAddresses",
                    "Versions"
                ]
            }
        },
        "/candidatesUrl": {
            "get": {
                "summary": "Get Source Candidates",
                "description": "See [Source Candidates Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#source-candidates-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/CandidatesModel"
                        }
                    }
                }
            }
        },
        "/cataloguesUrl": {
            "get": {
                "summary": "Get Catalogues",
                "description": "See [Catalogues Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#catalogues-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/CataloguesModel"
                        }
                    }
                }
            }
        },
        "/catalogueUrl": {
            "get": {
                "summary": "Get Catalogue Details",
                "description": "See [Catalogue Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#catalogue-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalogue"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/CatalogueModel"
                        }
                    }
                }
            }
        },
        "/connectionUrl": {
            "delete": {
                "summary": "Delete connection.",
                "description": "See [Connection Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connection-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Connection"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Connection Details",
                "description": "See [Connection Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connection-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Message",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectionModel"
                        }
                    }
                }
            }
        },
        "/connectionsEndpoint": {
            "get": {
                "summary": "Get Connections",
                "description": "See [Connections Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connections-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectionsResponseModel"
                        }
                    }
                }
            },
            "post": {
                "summary": "Connection Create Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Connection Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connection-create-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "connect-token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/LocationAndLinkModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Connect",
                    "Data Provider",
                    "Relying Party"
                ]
            }
        },
        "/connectTokenUrl": {
            "delete": {
                "summary": "Delete connect token.",
                "description": "See [Connect Token Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Connect Token"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Connect Token Details",
                "description": "See [Connect Token Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenDataModel"
                        }
                    }
                }
            },
	    "patch": {
                "summary": "Update Connect Token Details",
                "description": "See [Connect Token Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "connect-token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenModel"
                        }
                    }
                ],
                "tags": [
                    "Connect Token"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/consentsEndpoint": {
            "get": {
                "summary": "Get Consents",
                "description": "See [Consents Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#consents-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ConsentsModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Consent"
                ]
            }
        },
        "/consentUrl": {
            "delete": {
                "summary": "Delete consent.",
                "description": "See [Consent Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#consent-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Consent"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Consent Details",
                "description": "Get Consent Details, see [Consent Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#consent-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Consent"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConsentModel"
                        }
                    }
                }
            },
	    "patch": {
                "summary": "Update Consent details",
                "description": "Update Consent Details, see [Consent Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#consent-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "in": "body",
                        "name": "consent-update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConsentModel"
                        }
                    }
                ],
                "tags": [
                    "Consent"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            },
	    "post": {
                "summary": "Register Source",
                "description": "See [Source Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#source-register-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "in": "body",
                        "name": "source-url",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SourceUrlModel"
                        }
                    }
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/createEndpoint": {
            "post": {
                "summary": "Create Qiy Node.",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Qiy Node Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-create-request).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "create-request-parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QiyNodeCreateRequestParametersModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Lifecycle"
                ]
            }
        },
        "/credentialsRegisterUrl": {
            "post": {
                "summary": "Register Service Credentials.",
                "description": "See [Service Credentials Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-credentials-register-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "service-credentials",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceCredentialsModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Source"
                ]
            }
        },
        "/ctCreateEndpoint": {
            "post": {
                "summary": "Create or Register Connect Token",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Connect Token Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-create-request) or [Connect Token Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "connect-token-request-details",
                        "description": "Connect Token request parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenRequestParametersModel"
                        }
                    }
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "201": {
                        "description": "The status code of a success response will be 201 Created.",
                        "headers": {
                            "Location": {
                                "description": "The Connect Token Url of the generated token, see /connectTokenUrl.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dataTypesUrl": {
            "get": {
                "summary": "Get Data Types",
                "description": "See [Data Types Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-types-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/DataTypesModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            },
            "post": {
                "summary": "Data Type Register Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Data Type Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-type-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataTypeModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            }
        },
        "/dataTypeUrl": {
	    "delete": {
                "summary": "Unregister Data Type.",
                "description": "See [Data Type Unregister Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-type-unregister-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
            "get": {
                "summary": "Get Data Type Details",
                "description": "See [Data Type Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-type-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/DataTypeModel"
                        }
                    }
                }
            }
        },
        "/deleteEndpoint": {
            "delete": {
                "summary": "Delete Qiy Node.",
                "description": "See [Qiy Node Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Lifecycle"
                ],
                "responses": {
                    "204": {
                        "description": "Once the local data has been deleted a response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            }
        },
        "/eventsEndpoint": {
            "get": {
                "summary": "Start listening to events",
                "description": "See [Events](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#events).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "text/event-stream"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/EventStreamModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Connect",
                    "Data",
                    "Data Provider",
                    "Relying Party"
                ]
            }
        },
        "/libraryEndpoint": {
            "get": {
                "summary": "Get Library details",
                "description": "See [Library Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/LibraryModel"
                        }
                    }
                }
            }
        },
        "/mboxUrl": {
            "get": {
                "summary": "Get messages",
                "description": "See [Messages Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#messages-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "201, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/MailboxMessagesModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Message",
                    "Relying Party"
                ]
            },
            "post": {
                "summary": "Send message",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Message Post Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#message-post-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MessageModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data Provider",
                    "Message"
                ]
            }
        },
        "/messageUrl": {
            "delete": {
                "summary": "Delete message.",
                "description": "See [Message Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#message-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Message Details",
                "description": "See [Message Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#message-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/MailboxMessageModel"
                        }
                    }
                }
            }
        },
        "/portfolioEndpoint": {
            "get": {
                "summary": "Get Portfolio details",
                "description": "See [Portfolio Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#portfolio-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/PortfolioModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Portfolio"
                ]
            }
        },
        "/libraryProviderUrl": {
            "delete": {
                "summary": "Delete Library Provider.",
                "description": "See [Library Provider Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-provider-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Library Provider Details",
                "description": "See [Library Provider Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-provider-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/LibraryProviderModel"
                        }
                    }
                }
            },
	    "patch": {
                "summary": "Update Library Provider details",
                "description": "See [Library Provider Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-provider-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "in": "body",
                        "name": "provider-update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryProviderModel"
                        }
                    }
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/libraryProvidersUrl": {
            "get": {
                "summary": "Get Library Providers",
                "description": "See [Library Providers Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-providers-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/LibraryProvidersModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            },
            "post": {
                "summary": "Library Provider Register Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Library Provider Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#library-provider-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryProviderModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            }
        },
        "/publishedServicesUrl": {
            "get": {
                "summary": "Get Published Services",
                "description": "See [Published Services Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#published-services-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/PublishedServicesModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Catalogue"
                ]
            },
            "post": {
                "summary": "Register Published Service.",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Published Service Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#published-service-register-request).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "service-description",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishedServiceModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Catalogue"
                ]
            }
        },
        "/publishedServiceUrl": {
	    "delete": {
                "summary": "Unregister Published Service.",
                "description": "See [Published Service Unregister Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#published-service-unregister-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Catalogue"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
            "get": {
                "summary": "Get Published Service Details",
                "description": "See [Published Service Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#published-service-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalogue"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/PublishedServiceModel"
                        }
                    }
                }
            }
        },
        "/serviceCredentialsUrl": {
            "delete": {
                "summary": "Delete Service Credentials.",
                "description": "See [Service Credentials Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-credentials-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Service Credentials Details",
                "description": "See [Service Credentials Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-credentials-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ServiceCredentialsModel"
                        }
                    }
                }
            },
	    "patch": {
                "summary": "Update Service Credentials Details",
                "description": "See [Service Credentials Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-credentials-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "service-credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceCredentialsModel"
                        }
                    }
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/serviceTypesUrl": {
            "get": {
                "summary": "Get Service Types",
                "description": "See [Service Types Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-types-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ServiceTypesModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            },
            "post": {
                "summary": "Service Type Register Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Service Type Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-type-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceTypeModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Library"
                ]
            }
        },
        "/serviceTypeUrl": {
	    "delete": {
                "summary": "Unregister Service Type.",
                "description": "See [Service Type Unregister Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-type-unregister-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
            "get": {
                "summary": "Get Service Type Details",
                "description": "See [Service Type Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#service-type-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ServiceTypeModel"
                        }
                    }
                }
            }
        },
        "/sourceUrl": {
            "delete": {
                "summary": "Delete Source.",
                "description": "See [Source Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#source-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
	    "get": {
                "summary": "Get Source Details",
                "description": "See [Source Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#source-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/SourceModel"
                        }
                    }
                }
            },
	    "patch": {
                "summary": "Update Source details",
                "description": "See [Source Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#source-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "in": "body",
                        "name": "source-update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SourceModel"
                        }
                    }
                ],
                "tags": [
                    "Source"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/subscriptionsUrl": {
            "get": {
                "summary": "Get Subscriptions",
                "description": "See [Subscriptions Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#subscriptions-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionsModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Portfolio"
                ]
            },
            "post": {
                "summary": "Subscription Register Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Subscription Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#subscription-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Portfolio"
                ]
            }
        },
        "/subscriptionUrl": {
            "delete": {
                "summary": "Delete Subscription.",
                "description": "See [Subscription Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#subscription-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "tags": [
                    "Portfolio"
                ],
                "responses": {
                    "204": {
                        "description": "A response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            },
            "get": {
                "summary": "Get Subscription details",
                "description": "See [Subscription Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#subscription-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Portfolio"
                ]
            },
            "patch": {
                "summary": "Update Subscription details",
                "description": "See [Subscription Update Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#subscription-update-request).",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "in": "body",
                        "name": "source-update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionModel"
                        }
                    }
                ],
                "tags": [
                    "Portfolio"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200."
                    }
                }
            }
        },
        "/refEndpoint": {
            "get": {
                "summary": "Operation Execute Request",
                "description": "See [Operation Execute Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-execute-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferenceResultModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Relying Party"
                ]
            }
        },
        "/refsEndpoint": {
            "get": {
                "summary": "Resolve references",
                "description": "See [Operation Execute Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-execute-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferencesResultModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Relying Party"
                ]
            },
            "post": {
                "summary": "Register Operation Specification",
                "description": "See [Operation Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "operation-specification",
                        "description": "See [Operation Specification](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-specification).",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OperationSpecificationModel"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferenceModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Data Provider"
                ]
            }
        }
    }
}

