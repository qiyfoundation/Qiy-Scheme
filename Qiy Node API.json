{
    "swagger": "2.0",
    "info": {
        "version": "0.0.0",
        "title": "Qiy Node API",
        "description": "RESTful API documentation of the [Qiy Node API](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-api).",
        "license": {
	    "name": "Qiy Foundation License for the Qiy Scheme",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/blob/master/LICENSE.md"
        },
        "termsOfService": "https://github.com/qiyfoundation/Qiy-Scheme",
        "contact": {
	    "name": "Work Stream Functionality & Technology",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/projects/2",
            "email": "info@qiyfoundation.org"
        }
    },
    "host": "access.provider.host",
    "basePath": "/qiy-node-implementation/api",
    "schemes": [
        "https"
    ],
    "definitions": {
        "ApiModel": {
            "properties": {
                "currentVersion": {
                    "type": "string",
                    "description": "Api version.",
                    "maxItems": 1,
                    "minItems": 1
                },
                "id": {
                    "description": "[Qiy Node Id](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-id). This property is only included when the request is authenticated.",
                    "type": "string",
                    "maxItems": 1,
                    "minItems": 0
                },
                "links": {
                    "$ref": "#/definitions/ApiLinksModel"
                }
            },
            "required": [
                "currentVersion",
                "links"
            ],
            "type": "object"
        },
        "ApiLinksModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointAddressesModel"
                }
            ]
        },
        "ConnectionsResponseModel": {
            "description": "Response of [Connections Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connections-request).",
            "items": {
                "type": "object",
                "properties": {
                    "result": {
                        "items": {  
                            "$ref": "#/definitions/ConnectionDetailsModel"
			},
                        "type": "array"
                    },
                    "links": {
                        "description": "tbd",
			"items": {
				"type": "object"
			},
                        "type": "array"
                    }
                }
            },
            "type": "array"
        },
        "ConnectionDetailsModel": {
            "description": "Connection details.",
            "properties": {
                "state": {
                    "description": "State of the connection.",
                    "type": "string"
                },
                "activeFrom": {
                    "description": "Active from date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms"
                },
                "activeUntil": {
                    "description": "Active until date time stamp.",
                    "type": "integer",
                    "format": "Unix time in ms, nullable"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "mbox": {
                            "description": "Messagebox Url.",
                            "type": "string",
                            "format": "url"
                        },
                        "references": {
                            "description": "References Url.",
                            "type": "string",
                            "format": "url"
                        },
                        "self": {
                            "description": "Connection Url",
                            "type": "string",
                            "format": "url"
                        }
                    },
                    "required": [
		        "mbox",
		        "references",
		        "self"
                    ]
                }
            },
            "required": [
                "state",
                "activeFrom",
                "activeUntil",
                "links"
            ],
            "type": "object"
        },
        "ConnectTokenDataModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ConnectTokenMetadataModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "json": {
                            "$ref": "#/definitions/ConnectTokenModel"
                        }
                    }
                }
            ],
            "description": "Connect Token details",
            "type": "object"
        },
        "ConnectTokenMetadataModel": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "integer",
                    "description": "Expiration date time.",
                    "format": "Unix time in ms",
                    "minItems": 0,
                    "maxItems": 1
                },
                "name": {
                    "type": "string",
                    "description": "Connect Token name",
                    "minItems": 0,
                    "maxItems": 1
                },
                "note": {
                    "description": "Note",
                    "minItems": 0,
                    "maxItems": 1,
                    "type": "string"
                },
                "useBudget": {
                    "type": "integer",
                    "description": "Maximum number of use times",
                    "maxItems": 1,
                    "minItems": 0
                },
                "actions": {
                    "type": "object",
                    "description": "Instructions to be executed immediately after connecting.",
                    "properties": {
                        "messages": {
                            "description": "Messages",
                            "items": {
                                "$ref": "#/definitions/MessageModel"
                            },
                            "type": "array"
                        }
                    }
                }
            }
        },
        "ConnectTokenModel": {
            "description": "See [Connect Token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token).",
            "properties": {
                "target": {
                    "description": "The [Transport Connect Token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#transport-connect-token).",
                    "type": "string"
                },
                "identifier": {
                    "description": "This property is only used in responses and holds the Qiy Node id.",
                    "type": "string"
                },
                "tmpSecret": {
                    "type": "string",
                    "description": "Base64-encoded temporary secret.",
                    "format": "Base64-encoded"
                }
            },
            "required": [
                "target",
                "tmpSecret"
	    ],
            "type": "object"
        },
        "ConnectTokenRequestParametersModel": {
	    "allOf": [
	        { "$ref": "#/definitions/ConnectTokenMetadataModel" },
	        {
	            "type": "object",
		    "properties": {
	                "json": {
			    "$ref": "#/definitions/ConnectTokenModel" 
			}
		    }
		}
            ]
        },
        "EndpointAddressesModel": {
            "type": "object",
            "description": "Current path endpoint addresses.",
            "properties": {
                "create": {
                    "description": "Current address for the 'create'-endpoint (createEndpoint). This property is only included when the request is not authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "catalogues": {
                    "description": "Current address for the 'catalogues'-endpoint (cataloguessEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "connections": {
                    "description": "Current address for the 'connections'-endpoint (connectionsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "consents": {
                    "description": "Current address for the 'consents'-endpoint (consentsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ctCreate": {
                    "description": "Current address for the 'connect token create'-endpoint (ctCreateEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ctList": {
                    "description": "Current address for the 'connect token list'-endpoint (ctListEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "delete": {
                    "description": "Current address for the 'delete'-endpoint (deleteEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "events": {
                    "description": "Current address for the 'events'-endpoint (eventsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "library": {
                    "description": "Current address for the 'library'-endpoint (libraryEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "portfolio": {
                    "description": "Current address for the 'portfolio'-endpoint (portfolioEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "ref": {
                    "description": "Current address for the 'reference'-endpoint (refEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "refs": {
                    "description": "Current address for the 'references'-endpoint (refsEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                },
                "scan": {
                    "description": "Current address for the 'create connection'-endpoint (scanEndpoint). This property is only included when the request is authenticated.",
                    "format": "url",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "string"
                }
            }
        },
        "EventStreamModel": {
	    "allOf": [
                {   "$ref": "#/definitions/EventModel" },
                { 
	            "description": "See [Events](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#events).",
	            "format": "Stream of event objects."
		}
            ]
        },
        "EventModel": {
            "description": "Event Model.",
            "type": "object",
            "properties": {
                "connectionUrl": {
                    "description": "Connection Url.",
                    "type": "string",
                    "format": "url"
                },
                "extraData": {
                    "description": "Property for extra event data.",
                    "type": "string"
                },
                "type": {
                    "description": "Event type name.",
                    "type": "string"
                }
            },
	    "required": [
                "connectionUrl",
                "extraData",
                "type"
            ]
        },
        "LocationAndLinkModel": {
            "description": "Location and link.",
            "type": "object",
            "properties": {
                "Location": {
                    "description": "Url of the created connection.",
                    "type": "string"
                },
                "Link": {
                    "description": "Link header parameter, containing the mailbox url for the connection.",
                    "type": "string"
                }
            }
        },
        "MailboxMessageModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "inbound": {
                            "type": "boolean",
                            "description": "Whether the received message is inbound or outbound."
                        },
                        "serialNr": {
                            "type": "integer",
                            "description": "Serial number of the message."
                        }
                    },
                    "required": [
		        "inbound",
		        "serialNr"
	            ]
                }
            ]
        },
        "MailboxMessagesModel": {
            "description": "Qiy Node Mailbox messages.",
            "items": {
                "$ref": "#/definitions/MailboxMessageModel"
            },
            "type": "array"
        },
        "MessageModel": {
            "description": "See [Qiy Node Message](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-message).",
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "Application protocol",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "refSerialNr": {
                    "description": "Reference serial number",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "integer",
		    "format": "nullable (NB: See [OpenAPI 2.0 does not support nullable fields](https://github.com/swagger-api/swagger-node/issues/399) and [OpenAPI 3.0 'nullable'-attribute](https://swagger.io/docs/specification/data-models/data-types/#nullable).)"
                },
                "text": {
                    "description": "Subject",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "payload": {
                    "description": "The Base64-encoded payload of the message.",
                    "format": "Base64-encoded",
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "object"
                }
            },
	    "required": [
                "protocol",
                "refSerialNr",
                "text",
                "payload"
            ]
        },
        "OperationReferenceRequestMessageModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/MessageModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "payload": {
                            "properties": {
                                "message_descriptor": {
                                    "type": "string",
                                    "format": "https://code.in.digital-me.nl/DOC/FuncQiy/blob/master/QS%20User%20Node%20Protocol-gitbucket.md#operation-reference-request-message"
                                },
                                "created": {
                                    "description": "Message creation time.",
                                    "type": "integer",
                                    "format": "Unix time in ms"
                                }
                            }
                        },
                        "protocol": {
                            "type": "string",
                            "description": "[Data Descriptor](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#data-descriptor) to identify the requested data.",
                            "format": "url"
                        }
                    }
                }
            ]
        },
        "OperationSpecificationModel": {
            "type": "object",
            "description": "See [Operation Specification](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-specification).",
            "properties": {
                "body": {
                    "description": "Required body data.",
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "object",
                    "format": "not nullable"
                },
                "headers": {
                    "description": "The headers to be used.",
                    "items": {
                        "properties": {
                            "accept": {
                                "description": "Accept header.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "minItems": 0,
                    "maxItems": 1,
                    "type": "array"
                },
                "method": {
                    "description": "The supported http operation.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "queryParams": {
                    "description": "Required query parameters",
                    "items": {
                        "type": "object"
                    },
                    "maxItems": 1,
                    "minItems": 0,
                    "type": "array"
                },
                "transport": {
                    "description": "The supported transfer protocol.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                },
                "url": {
                    "description": "Resource url",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "QiyNodeCreateRequestParametersModel": {
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Use same value as id.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                },
                "publicKey": {
                    "description": "Public key to be used to authenticate future requests.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                },
                "id": {
                    "description": "Qiy Node id.",
                    "type": "string",
                    "minItems": 1,
                    "maxItems": 1
                }
            },
            "required": [
                "alias",
                "publicKey",
                "id"
            ]
        },
        "ReferenceDetailsModel": {
            "description": "Reference details.",
            "type": "object",
            "properties": {
                "ref": {
                    "description": "Resource reference.",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "value": {
                    "description": "Return value of the resource, accessed immediately after the request.",
                    "format": "Base64-encoded",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                },
                "connection": {
                    "description": "Connection uri.",
                    "format": "uri",
                    "minItems": 1,
                    "maxItems": 1,
                    "type": "string"
                }
            }
        },
        "ReferenceModel": {
            "description": "Operation Reference",
            "type": "string"
        },
        "ReferenceResultModel": {
            "description": "Resolved Reference",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data",
                    "type": "string"
                }
            }
        },
        "ReferencesResultModel": {
            "description": "References result.",
            "type": "object",
            "properties": {
                "applicationProtocolUriPatternProperty": {
                    "description": "References with the application protocol uri specified by the name of the object property.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReferenceDetailsModel"
                    }
                }
            },
            "uniqueItems": true
        }
    },
    "parameters": {
        "authorizationParam": {
            "name": "Authorization",
            "in": "header",
            "description": "See [Authorization Header Parameter](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#authorization-header-parameter).",
            "required": true,
            "type": "string",
            "format": "QTF [Qiy Node id] [Unix time in ms]:[signature]"
        },
        "authorizationOptionalParam": {
            "name": "Authorization",
            "in": "header",
            "description": "See [Authorization Header Parameter](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#authorization-header-parameter).",
            "required": false,
            "type": "string",
            "format": "QTF [Qiy Node id] [Unix time in ms]:[signature]"
        },
        "idParam": {
            "name": "id",
            "in": "query",
            "description": "id parameter.",
            "required": true,
            "type": "string"
        },
        "sinceParam": {
            "name": "since",
            "in": "query",
            "description": "Limit results to period after date=time stamp 'since'.",
            "required": false,
            "type": "integer",
            "format": "Unix time in ms"
        }
    },
    "paths": {
        "/api": {
            "get": {
                "summary": "API information",
                "description": "Get api information and current endpoint addresses. Use this request daily to remain operational, see [Dynamic Path Endpoint Addresses](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#dynamic-path-endpoint-addresses) for more information.",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationOptionalParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfull response",
                        "schema": {
                            "$ref": "#/definitions/ApiModel"
                        }
                    }
                },
                "tags": [
                    "PathEndpointAddresses",
                    "Versions"
                ]
            }
        },
        "/connectionUrl": {
            "get": {
                "summary": "Get Connection Details",
                "description": "See [Connection Details Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connection-details-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Message",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectionDetailsModel"
                        }
                    }
                }
            }
        },
        "/connectionsEndpoint": {
            "get": {
                "summary": "Get Connections",
                "description": "See [Connections Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connections-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectionsResponseModel"
                        }
                    }
                }
            }
        },
        "/connectTokenUrl": {
            "get": {
                "summary": "Get Connect Token Details",
                "description": "Get Connect Token Details, see [Connect Token Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-create-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "200": {
                        "description": "The status code of a success response will be 200.",
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenDataModel"
                        }
                    }
                }
            }
        },
        "/createEndpoint": {
            "post": {
                "summary": "Create Qiy Node.",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Qiy Node Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-create-request).",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Create request parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QiyNodeCreateRequestParametersModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Lifecycle"
                ]
            }
        },
        "/ctCreateEndpoint": {
            "post": {
                "summary": "Create or Register Connect Token",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Connect Token Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-create-request) or [Connect Token Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connect-token-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "connect-token-request-details",
                        "description": "Connect Token request parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenRequestParametersModel"
                        }
                    }
                ],
                "tags": [
                    "Connect",
                    "Relying Party"
                ],
                "responses": {
                    "201": {
                        "description": "The status code of a success response will be 201 Created.",
                        "headers": {
                            "Location": {
                                "description": "The Connect Token Url of the generated token, see /connectTokenUrl.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/eventsEndpoint": {
            "get": {
                "summary": "Start listening to events",
                "description": "See [Events](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#events).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    }
                ],
                "produces": [
                    "text/event-stream"
                ],
                "responses": {
                    "200": {
                        "description": "200 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/EventStreamModel"
                        }
                    },
                    "400": {
                        "description": "[400,600> Unsuccessful execution."
                    }
                },
                "tags": [
                    "Connect",
                    "Data",
                    "Data Provider",
                    "Relying Party"
                ]
            }
        },
        "/mboxUrl": {
            "get": {
                "summary": "Get messages",
                "description": "See [Messages Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#messages-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "201, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/MailboxMessagesModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Message",
                    "Relying Party"
                ]
            },
            "post": {
                "summary": "Send message",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Message Post Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#message-post-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/MessageModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution."
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data Provider",
                    "Message"
                ]
            }
        },
        "/owners/id/{id}": {
            "delete": {
                "summary": "Delete Qiy Node.",
                "description": "See [Qiy Node Delete Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#qiy-node-delete-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "id",
                        "description": "Qiy Node id.",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Lifecycle"
                ],
                "responses": {
                    "204": {
                        "description": "Once the local data has been deleted a response code 204 (NO CONTENT) will indicate a success."
                    },
                    "400": {
                        "description": "Failures will be indicated with response codes 400 to but-not-including 600.        "
                    }
                }
            }
        },
        "/refEndpoint": {
            "get": {
                "summary": "Operation Execute Request",
                "description": "See [Operation Execute Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-execute-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/idParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferenceResultModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Relying Party"
                ]
            }
        },
        "/refsEndpoint": {
            "get": {
                "summary": "Resolve references",
                "description": "See [Operation Execute Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-execute-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "$ref": "#/parameters/sinceParam"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferencesResultModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Relying Party"
                ]
            },
            "post": {
                "summary": "Register Operation Specification",
                "description": "See [Operation Register Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-register-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "operationSpecification",
                        "description": "See [Operation Specification](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#operation-specification).",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OperationSpecificationModel"
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200, Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/ReferenceModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Data",
                    "Data Provider"
                ]
            }
        },
        "/scanEndpoint": {
            "post": {
                "summary": "Connection Create Request",
                "consumes": [
                    "application/json"
                ],
                "description": "See [Connection Create Request](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/qiy-node-interface/Qiy%20Node%20Protocol.md#connection-create-request).",
                "parameters": [
                    {
                        "$ref": "#/parameters/authorizationParam"
                    },
                    {
                        "name": "connect-token",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ConnectTokenModel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "201 Successful execution.",
                        "schema": {
                            "$ref": "#/definitions/LocationAndLinkModel"
                        }
                    },
                    "400": {
                        "description": "400,600 Unsuccessful execution."
                    }
                },
                "tags": [
                    "Connect",
                    "Data Provider",
                    "Relying Party"
                ]
            }
        }
    }
}

