components:
  callbacks:
    accessFeed:
      $serviceAccessEndpointUrl:
        post:
          requestBody:
            content:
              application/json:
                examples:
                  example:
                    $ref: '#/components/examples/serviceEndpointFeedAccessRequest'
                schema:
                  $ref: '#/components/schemas/serviceEndpointFeedAccessRequest'
            required: true
          responses:
            '200':
              $ref: '#/components/responses/accessFeedCallback'
            default:
              $ref: '#/components/responses/default'
    dataReferenceReceivedv2:
      $dataReferenceReceivedv2EndpointUrl:
        post:
          requestBody:
            content:
              application/json:
                examples:
                  example:
                    $ref: '#/components/examples/dataReferenceReceivedv2Callback'
                schema:
                  $ref: '#/components/schemas/dataReferenceReceivedv2Callback'
            required: true
          responses:
            '200':
              $ref: '#/components/responses/dataReferenceReceivedv2Callback'
            default:
              $ref: '#/components/responses/default'
    feedRequest:
      $serviceEndpointUrl:
        post:
          requestBody:
            content:
              application/json:
                examples:
                  example:
                    $ref: '#/components/examples/serviceEndpointFeedRequest'
                schema:
                  $ref: '#/components/schemas/serviceEndpointFeedRequest'
            required: true
    stateHandled:
      $stateHandledCallbackEndpointUrl:
        post:
          requestBody:
            content:
              application/json:
                examples:
                  example:
                    $ref: '#/components/examples/stateHandledEvent'
                schema:
                  $ref: '#/components/schemas/stateHandledEvent'
            required: true
  examples:
    actionMessage:
      value:
        connection: https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
        created: 1562059030644
        links:
          handle: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/handle/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
          self: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4
        message:
          inbound: true
          payload: eyJrZXkiOiJ3K2pMeTEzZlhJVFpkS3lISy80TWRBPT0iLCJpbnB1dCI6bnVsbH0=
          processed: true
          protocol: http://bla.nl/events
          sent: false
          serialNr: 5
          text: huh?
        optionPIDs:
          jRMCgeCzt3zFGDZuutuNvg==: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca
          kpKugxcUU7AdJJgVUVuFnA==: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
        relayOptions:
          8f4edf58-73dd-4fee-b344-149c924f1605: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca
          wip_feed_rp: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
    actionMessageList:
      value:
        result:
        - connection: https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
          created: 1562059030644
          links:
            handle: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/handle/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
            self: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4
          message:
            inbound: true
            payload: eyJrZXkiOiJ3K2pMeTEzZlhJVFpkS3lISy80TWRBPT0iLCJpbnB1dCI6bnVsbH0=
            processed: true
            protocol: http://bla.nl/events
            sent: false
            serialNr: 5
            text: huh?
          optionPIDs:
            jRMCgeCzt3zFGDZuutuNvg==: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca
            kpKugxcUU7AdJJgVUVuFnA==: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
          relayOptions:
            8f4edf58-73dd-4fee-b344-149c924f1605: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca
            wip_feed_rp: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
    apiGetAppAuthenticated:
      value:
        currentVersion: 1.0.67-SNAPSHOT
        links:
          create: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners
        serverTime: 1568366519145
    apiGetUserAuthenticated:
      value:
        currentVersion: 1.0.67-SNAPSHOT
        id: 31962764-596b-4eff-b80d-9cd32a65a549
        links:
          amList: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/mbox/user/action/31962764-596b-4eff-b80d-9cd32a65a549
          connections: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549
          ct-create: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549
          ct-list: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549
          ctCreate: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549
          ctList: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549
          eventCallbacks: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549/eventcallbacks
          events: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/events/31962764-596b-4eff-b80d-9cd32a65a549
          feeds: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/31962764-596b-4eff-b80d-9cd32a65a549/feeds
          manRef: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/reference-management/31962764-596b-4eff-b80d-9cd32a65a549
          nodeSettings: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549
          ref: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549/single
          refs: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549
          scan: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549
          self: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners/id/31962764-596b-4eff-b80d-9cd32a65a549
          serviceCatalog: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/servicecatalog/31962764-596b-4eff-b80d-9cd32a65a549
          target-template: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/~id~
        serverTime: 1568374440048
    authenticationRequired:
      value:
        errors:
        - message: Authentication required!
          status: 401
    connectTokenJson:
      value:
        identifier: mgd_dev2
        target: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407
        tmpSecret: tOCChOFtQiflrMGBPQfy8w==
    connectTokenList:
      value:
      - created: 1542882407000
        json:
          identifier: mgd_dev2
          target: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407
          tmpSecret: tOCChOFtQiflrMGBPQfy8w==
        lastUsed: 1542882800000
        links:
          delete: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          self: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          update: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
        useBudget: 1
        useSpend: 1
        valid: true
      - created: 1544537654000
        json:
          identifier: mgd_dev2
          target: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/beb82a8f-4e7f-4927-b272-cceb24402cc0
          tmpSecret: 5rqlN8YDI3rGP46cl+kE8Q==
        lastUsed: 1544537657000
        links:
          delete: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd
          self: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd
          update: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd
        useBudget: 1
        useSpend: 1
        valid: true
    connectTokenNew:
      value:
        created: 1542882407000
        json:
          identifier: mgd_dev2
          target: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407
          tmpSecret: tOCChOFtQiflrMGBPQfy8w==
        lastUsed: null
        links:
          delete: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          self: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          update: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
        useBudget: 1
        useSpend: 0
        valid: true
    connectTokenRegisterRequestBody:
      value:
        expires: 2349020398
        json:
          identifier: Service Provider 1
          target: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/sp1connectTokenOffline2target
          tmpSecret: 9paMAI61N6b5dPCCYD4IiS==
        useBudget: 1
    connectTokenRequestRequestBody:
      value:
        expires: 2349020398
        useBudget: 1
    connectTokenUsed:
      value:
        created: 1542882407000
        json:
          identifier: mgd_dev2
          target: https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407
          tmpSecret: tOCChOFtQiflrMGBPQfy8w==
        lastUsed: 1542882800000
        links:
          delete: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          self: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
          update: https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40
        useBudget: 1
        useSpend: 1
        valid: true
    connection:
      value:
        activeFrom: 1551796945000
        links:
          feeds: https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/016706d0-b3c1-4104-b6de-aacdf33230c0/feeds
          mbox: https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0
          references: https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0
          self: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0
        pid: aAQt41QqCvJuy8DMBayDCQ==
        state: connected
    connectionExpired:
      value:
        activeFrom: 1544686272000
        activeUntil: 1544693472000
        links:
          feeds: https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds
          mbox: https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
          parent: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a
          references: https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
          self: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
        pid: vjQK/rOw6CoSuWPZy6K93w==
        state: expired
    connectionList:
      value:
        result:
        - activeFrom: 1544686272000
          activeUntil: 1544693472000
          links:
            feeds: https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds
            mbox: https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
            parent: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a
            references: https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
            self: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3
          pid: vjQK/rOw6CoSuWPZy6K93w==
          state: expired
        - activeFrom: 1544685886000
          links:
            feeds: https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/7f4dd669-9381-40e1-8f6e-4c9904476d8a/feeds
            mbox: https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a
            references: https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a
            self: https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a
          pid: nfIols4wKn9bBVkqnkHKbw==
          state: connected
    dataReferenceReceivedv2Callback:
      value:
        connectionUrl: https://dev2-user.testonly.digital-me.nl/user/connections/user/pt_usernode_fksH_de/d3b58af4-2883-4cef-b203-41e117549906
        extraData: BZWEKR63P2FEJZXYLGBN3XNWCBZU6FZG
        type: DATA_REFERENCE_RECEIVED2
    dataReferenceReceivedv2Event:
      value:
        connectionUrl: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid1sp1connectionUrl
        extraData:
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          value: SjF1RFBNam14RmxEcW8rOVdzNkpHd1RZaFdBPQ==
        type: DATA_REFERENCE_RECEIVED2
    eventCallbackEndpointUrls:
      value:
        DATA_REFERENCE_RECEIVED2: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/dataReferenceReceivedCallbackEndpointUrl
        STATE_HANDLED: stateHandledCallbackEndpointUrl
    eventsResponseExample:
      value: :ping
    feedAccessResponse:
      value:
        activities-heart:
        - customHeartRateZones: []
          dateTime: today
          heartRateZones:
          - caloriesOut: 138.8351
            max: 86
            min: 30
            minutes: 65
            name: Out of Range
          - caloriesOut: 309.96824
            max: 120
            min: 86
            minutes: 177
            name: Fat Burn
          - caloriesOut: 198.6678
            max: 146
            min: 120
            minutes: 59
            name: Cardio
          - caloriesOut: 8.1326
            max: 220
            min: 146
            minutes: 7
            name: Peak
          value: '102.28'
        activities-heart-intraday:
          dataset:
          - time: '12:00:00'
            value: 111
          - time: '12:01:00'
            value: 97
          - time: '12:02:00'
            value: 112
          - time: '12:03:00'
            value: 114
          - time: '12:04:00'
            value: 136
          datasetInterval: 1
          datasetType: minute
    feedList:
      value:
        CE22UFPUKSW77IA26A2OKHVKEA3RU6ES:
          connection: https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/43c5c576-c0d0-4fdd-8593-a57dacdb1a2f
          created: 1565083781575
          lastUpdated: 1565083781626
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          status: Message sent
        PYSSVYZLIDBI5YDGHA6ONFWMTON4T2U3:
          connection: https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/f3f5c1d1-61c0-45fd-9faa-f7d377dd89e3
          created: 1564985247891
          lastUpdated: 1564985247945
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          status: Sending message failed
        QZJ5MOWNEXARVTTBWMYZAO7ISYOQQOAU:
          connection: https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/43c5c576-c0d0-4fdd-8593-a57dacdb1a2f
          created: 1565083591605
          lastUpdated: 1565083591687
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          status: Created
        RIUDDVYZLIDBI5YDGHAONFWMTON4INH78:
          connection: https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/f3f5c1d1-61c0-45fd-9faa-f7d377dd89e3
          created: 1564985247891
          lastUpdated: 1564985247945
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          status: Ready to resolve
    feedRequest:
      value:
        input: Im9wdGlvbmFsIG9wZXJhdGlvbiBib2R5IGVuY29kZWQgYXMgYSBiYXNlNjQgZW5jb2RlZCBieXRlIGFycmF5Ig==
        protocol: https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1
        text: Requesting feed.
    feedRequestResponse:
      value:
        feedId: 3J2UVSFIAH6X77HXR4MVHBVNG46GWT3M
        protocol: https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1
    feedsAccessRequest:
      value:
        '{{feed_id1}}':
          input: <optional json member with base-64 encrypted byte array>
        '{{feed_id2}}':
          input: <optional json member with base-64 encrypted byte array>
    feedsAccessResponse:
      value:
        <feed_id1>:
          content-type: application/xml
          output: <base64-encoded feed_id1 access response>
        <feed_id2>:
          content-type: application/json
          output: <base64-encoded feed_id2 access response>
    messageList:
      value:
        result:
        - inbound: false
          payload: eyJwdWJsaWNLZXkiOiJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXU0cXNYMmlISzE0MzhXZjRCcGxiMjBqYXdjN0U3Mng0MTMwUW9QaE9MajByM0VSTi8wSmpjK3FoaU1QQVBEVCtTa1NQbmdGckN2RTRhR0pIOWIwdm8rWVkvcW1FbVFzdGw0d2s5cEFHTnVJdHh0TStab0RoTHdkRHBETTc0QkE4aFZ3cXJHQVA5UUovNktibFFLbXRPT09NY0tTUXB0RXNFQ3NFQytMZThpTkJhU2ozRnBMbWpHUWkxYjZXMG1UMU1aYzVFUjRTOFVmN2hkajhpS0JRc3hFcjdZUThqZ2FXdE1rakZOU0tZemt2Vi9zU3FtL2t0akh4Q21MUk5yRXdvaDBvZ1V1S1FEMnJuK1piWXovalBMWjRZOFd4Q3d2Wi9jVjFkMDc5Wk16S0hYWVBLT3J1RnJOWTZjZng5STRsckEyVHdsSXpOQVd5RHQzN1ZsQ2xEUUlEQVFBQiIsInBlcnNpc3RlbnRJZCI6ImxOMUxEN2lBSGZ2bDVvTWRCZ0k4VWc9PSIsInByb3RvY29scyI6WyJodHRwczovL3Byb3RvY29scy5xaXkubmwvaW52aXRlcy92LjEuMC4wIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2NsZWFudXAvbWVzc2FnZXMvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9zdGF0ZS92LjEuMC4wIiwiaHR0cHM6Ly9naXRodWIuY29tL3FpeWZvdW5kYXRpb24vZmlLa3MvdHJlZS9tYXN0ZXIvc2NoZW1hL3YxIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2RhdGEtcmVmZXJlbmNlL3BlZXIvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9yZWZlcmVuY2UtbWFuYWdlbWVudC8xLjAuMCJdLCJuYW1lIjoibWdkX2RldjIifQ==
          processed: false
          protocol: https://protocols.qiy.nl/domain-details/v.1.0.0
          sent: true
          serialNr: 1
          text: Our details
        - inbound: true
          payload: eyJwZXJzaXN0ZW50SWQiOiJLandGTzlGekRyQUM3Q2Q4WURKajh3PT0ifQ==
          processed: true
          protocol: https://protocols.qiy.nl/reuse-persistent-id/v.1.0.0
          refSerialNr: 1
          sent: false
          serialNr: 2
          text: Known by this persistent id
    messageNew:
      value:
        payload: SGVsbG8gV29ybGQh
        protocol: https://example.com/qiy/node/message
        refSerialNr: -1
        text: Hello world!
    nodeCreateRequestBody:
      value:
        alias: Your Service Provider
        id: cb06fb8e-4e48-4eb1-8b5f-a46e9eef1308
        nodeSettings:
          askDappre: 'no'
          usePersistentId: 'yes'
        password: 9b449623-f361-425b-bca8-8c23c159e4c0
        publicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0TK8dMRxvXp66teemQe/tzUi26LBWfkO0pWGqyzmnNO6ISALt+rgEPl5mhqztAU4xI9iE/L9dCzC3snb2OQT+2/IaV9ilt1UAmZhyuogPeTKykPRFR2oT51wWoIuG4hD0x6iBhFCorn087Te99oS1RwS1RR5wFjIs/ol3ldawZ29xemsskmPEWJ/QpfpauBxvSbZEXRy15cAWnWO9yVzizUszwNjP8Ca0/K7NKa+lOtp09egO12SBMfX871AI44wWkZqPsr+O5cpo8Srw+90dbETA1Ypno3lpel2lBMQaf0+Srmjd/bJs9dlaXCTljoLt2uvOmriDSI6eSJZ7FxH4wIDAQAB
    nodeSettings:
      value:
        askDappre: 'no'
        usePersistentId: 'yes'
    serviceCatalogue:
      value:
        https://service-type-url.example:
          method: POST
          type: external
          uri: https://feed-request-endpoint-url.example
    serviceEndpointFeedAccessRequest:
      value:
        SjF1RFBNam14RmxEcW8rOVdzNkpHd1RZaFdBPQ==:
          input: Im9wdGlvbmFsIG9wZXJhdGlvbiBib2R5IGVuY29kZWQgYXMgYSBiYXNlNjQgZW5jb2RlZCBieXRlIGFycmF5Ig==
    serviceEndpointFeedRequest:
      value:
        connection: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid3dp1connectionUrl
        mbox: https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid3dp1connectionMbox
        message:
          inbound: true
          protocol: https://github.com/qiyfoundation/fiKks/tree/master/schema/v1
          sent: false
          serialNr: 6
          text: Requesting 'test data'
          thirdPartyRef: ' 4D0OqePJ1yKD41Q9qmixVnVFLWcJHFT1hhKDKG9FmeI='
        pid: 1IqX94/EoOcD47hCvBQ+gi==
    stateHandledEvent:
      value:
        connectionUrl: https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/3b5151e3-adc7-403a-a31a-8bd504e2c8ae
        extraData:
          PID: 9GqX94/EoOcD47hCvBQ+eg==
          connectToken: https://dev1-user.testonly.digital-me.nl/user/connecttokens/509f79f8-6562-49cd-bb24-4163557d7e59/7ced41dc-76ff-469e-9fa0-3f34c73d0a2b
          newUri: https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/ce5b2dd5-1bdd-41aa-b0ad-d0afa2e9a3cb
        type: STATE_HANDLED
  parameters:
    feedId:
      in: path
      name: feedId
      required: true
      schema:
        $ref: '#/components/schemas/feedId'
    protocol:
      explode: true
      in: query
      name: protocol
      required: false
      schema:
        $ref: '#/components/schemas/protocol'
      style: form
  responses:
    actionMessage:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/actionMessage'
          schema:
            $ref: '#/components/schemas/actionMessage'
      description: Action Message
    actionMessageList:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/actionMessageList'
          schema:
            $ref: '#/components/schemas/actionMessageList'
      description: Action Message list
    api:
      content:
        application/json:
          examples:
            apiGetAppAuthenticated:
              $ref: '#/components/examples/apiGetAppAuthenticated'
            apiGetUserAuthenticated:
              $ref: '#/components/examples/apiGetUserAuthenticated'
          schema:
            $ref: '#/components/schemas/apiResponse'
      description: Api response
    connectToken:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/connectTokenNew'
          schema:
            $ref: '#/components/schemas/connectToken'
      description: Connect token
    connectTokenCreateEndpointPostRequest:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/connectTokenNew'
          schema:
            $ref: '#/components/schemas/connectToken'
      description: Connect token created or registered
    connectTokenList:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/connectTokenList'
          schema:
            $ref: '#/components/schemas/connectTokenList'
      description: Connect token list
    connection:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/connection'
          schema:
            $ref: '#/components/schemas/connection'
      description: Connection
    connectionCreated:
      description: Connection created
    connectionList:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/connectionList'
          schema:
            $ref: '#/components/schemas/connectionList'
      description: Connection list
    dataReferenceReceivedv2Callback:
      description: Data Reference Received v2 callback response
    default:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/authenticationRequired'
          schema:
            properties:
              errors:
                items:
                  properties:
                    message:
                      pattern: Authentication required!
                      type: string
                    status:
                      enum:
                      - 401
                      type: number
                  type: object
                type: array
            type: object
      description: Default response
    eventCallbacksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/eventCallbackEndpointUrls'
        examples:
          example:
            $ref: '#/components/examples/eventCallbackEndpointUrls'
      description: Event callbacks set
    eventsResponse:
      content:
        examples:
          example:
            $ref: '#/components/examples/eventsResponseExample'
        text/event-stream: {}
      description: Events
    feedAccessResponse:
      content:
        application/json:
          examples:
            Feed response:
              $ref: '#/components/examples/feedAccessResponse'
          schema:
            $ref: '#/components/schemas/feedAccessResponse'
      description: Feed access response
    feedList:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/feedList'
          schema:
            $ref: '#/components/schemas/feedList'
      description: Feed list
    feedRequestResponse:
      content:
        application/json:
          examples:
            feed:
              $ref: '#/components/examples/feedRequestResponse'
          schema:
            $ref: '#/components/schemas/feedRequestResponse'
      description: Feed request response
    feedSourceAdd:
      description: Add feed source response
    feedSourceSet:
      description: Set feed source response
    feedsAccessResponse:
      content:
        application/json:
          examples:
            Feeds response:
              $ref: '#/components/examples/feedsAccessResponse'
          schema:
            $ref: '#/components/schemas/feedsAccessResponse'
      description: Feeds access response
    messageList:
      content:
        application/json:
          examples:
            example:
              $ref: '#/components/examples/messageList'
          schema:
            $ref: '#/components/schemas/messageList'
      description: Message list
    messageSent:
      description: Message sent
    nodeCreated:
      description: Node created
    nodeDeleted:
      description: Node deleted
    nodeSettingsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nodeSettings'
        examples:
          example:
            $ref: '#/components/examples/nodeSettings'
      description: Node settings
  schemas:
    actionMessage:
      properties:
        connection:
          description: Connection url of the related connection
          format: url
          maxItems: 1
          minItems: 1
          type: string
        created:
          description: Creation datetimestamp
          format: Unix time in mili seconds
          maxItems: 1
          minItems: 1
          type: number
        links:
          items:
            properties:
              handle:
                format: url
                maxItems: 1
                minItems: 1
                type: string
              self:
                format: url
                maxItems: 1
                minItems: 1
                type: string
            type: object
          maxItems: 1
          minItems: 1
          type: array
        message:
          allOf:
          - $ref: '#/components/schemas/message'
          - maxItems: 1
            minItems: 1
            type: object
        optionPIDs:
          description: Action endpoint addresses by pid as property name
          maxItems: 1
          minItems: 1
          properties:
            $pid:
              description: Action endpoint address
              format: url
              maxItems: 1
              minItems: 1
              type: string
          type: object
          x-patternProperties:
            $pidRex:
              description: Action endpoint address
              format: url
              maxItems: 1
              minItems: 1
              type: string
        relayOptions:
          description: action endpoint addresses by Qiy Node Id as property name
          maxItems: 1
          minItems: 1
          properties:
            $nodeIdRex:
              description: Action endpoint address
              format: url
              maxItems: 1
              minItems: 1
              type: string
          type: object
          x-patternProperties:
            $nodeIdRex:
              description: Action endpoint address
              format: url
              maxItems: 1
              minItems: 1
              type: string
      type: object
    actionMessageList:
      properties:
        result:
          items:
            $ref: '#/components/schemas/actionMessage'
          maxItems: 1
          minItems: 1
          type: array
      type: object
    apiAppAuthenticatedResponse:
      properties:
        currentVersion:
          type: string
        links:
          properties:
            create:
              description: '[Node Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#node-create-endpoint)
                url'
              type: string
          type: object
        serverTime:
          description: Server time in unix time in mili seconds.
          type: number
      type: object
    apiResponse:
      oneOf:
      - $ref: '#/components/schemas/apiAppAuthenticatedResponse'
      - $ref: '#/components/schemas/apiUserAuthenticatedResponse'
    apiUserAuthenticatedResponse:
      properties:
        currentVersion:
          type: string
        links:
          properties:
            amList:
              description: '[Action Messages List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#action-messages-list-endpoint)
                url'
              type: string
            connections:
              description: '[Connections List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connections-list-endpoint)
                url'
              type: string
            ct-create:
              description: deprecated
              type: string
            ct-list:
              description: deprecated
              type: string
            ctCreate:
              description: '[Connect Token Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connect-token-create-endpoint)
                url'
              type: string
            ctList:
              description: '[Connect Token List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connect-token-list-endpoint)
                url'
              type: string
            eventCallbacks:
              description: '[Event Callbacks Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#event-callbacks-endpoint)
                url'
              type: string
            events:
              description: '[Events Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#events-endpoint)
                url'
              type: string
            feeds:
              description: '[Feeds Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#feeds-endpoint)
                url'
              type: string
            manRef:
              description: deprecated
              type: string
            nodeSettings:
              description: '[Node Settings Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#node-settings-endpoint)
                url'
              type: string
            ref:
              description: deprecated
              type: string
            refs:
              description: deprecated
              type: string
            scan:
              description: '[Connection Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connection-create-endpoint)
                url'
              type: string
            self:
              description: '[Self Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#self-endpoint)
                url'
              type: string
            serviceCatalog:
              description: '[Service Catalogue Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#service-catalogue-endpoint)
                url'
              type: string
            target-tempate:
              description: '[Target Template Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#target-template-endpoint)
                url'
              type: string
          type: object
        serverTime:
          description: Server time in unix time in mili seconds.
          type: number
      type: object
    appAuthentication:
      description: See [Qiy Node App Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#app-authentication)
      scheme: Basic
      type: http
    connectToken:
      allOf:
      - $ref: '#/components/schemas/connectTokenPropertyCreated'
      - $ref: '#/components/schemas/connectTokenPropertyExpires'
      - $ref: '#/components/schemas/connectTokenPropertyJson'
      - $ref: '#/components/schemas/connectTokenPropertyLastUsed'
      - $ref: '#/components/schemas/connectTokenPropertyLinks'
      - $ref: '#/components/schemas/connectTokenPropertyName'
      - $ref: '#/components/schemas/connectTokenPropertyUseBudget'
      - $ref: '#/components/schemas/connectTokenPropertyUseSpend'
      - $ref: '#/components/schemas/connectTokenPropertyValid'
    connectTokenCreateEndpointPostRequestBody:
      anyOf:
      - $ref: '#/components/schemas/connectTokenPropertyExpires'
      - $ref: '#/components/schemas/connectTokenPropertyJson'
      - $ref: '#/components/schemas/connectTokenPropertyName'
      - $ref: '#/components/schemas/connectTokenPropertyUseBudget'
    connectTokenList:
      items:
        $ref: '#/components/schemas/connectToken'
      type: array
    connectTokenPropertyCreated:
      properties:
        created:
          description: Creation datetimestamp
          format: Unix time in mili seconds
          maxItems: 1
          type: number
      type: object
    connectTokenPropertyExpires:
      properties:
        expires:
          default: null
          description: Expiration datetime
          format: Unix time in mili seconds
          maxItems: 1
          minItems: 0
          nullable: true
          type: number
      type: object
    connectTokenPropertyJson:
      properties:
        json:
          description: Connect token json
          maxItems: 1
          minItems: 1
          properties:
            identifier:
              type: string
            target:
              format: url
              type: string
            tmpSecret:
              type: string
          type: object
      type: object
    connectTokenPropertyLastUsed:
      properties:
        lastUsed:
          default: null
          description: Last used datetimestamp
          format: Unix time in mili seconds
          maxItems: 1
          nullable: true
          type: number
      type: object
    connectTokenPropertyLinks:
      properties:
        links:
          description: Connect token links
          maxItems: 1
          minItems: 1
          properties:
            delete:
              format: url
              type: string
            self:
              format: url
              type: string
            update:
              format: url
              type: string
          type: object
      type: object
    connectTokenPropertyName:
      properties:
        name:
          default: null
          maxItems: 1
          minItems: 0
          nullable: true
          type: string
      type: object
    connectTokenPropertyUseBudget:
      properties:
        useBudget:
          default: null
          description: Number of connections that can be created with the connect
            token
          maxItems: 1
          minItems: 0
          nullable: true
          type: number
      type: object
    connectTokenPropertyUseSpend:
      properties:
        useSpend:
          default: null
          description: Number of connections that have been created with the connect
            token
          maxItems: 1
          minItems: 0
          nullable: true
          type: number
      type: object
    connectTokenPropertyValid:
      properties:
        valid:
          description: Whether the connect token can be used or not
          maxItems: 1
          minItems: 1
          type: boolean
      type: object
    connection:
      properties:
        activeFrom:
          format: Unix time in mili seconds
          maxItems: 1
          minItems: 1
          type: number
        activeUntil:
          default: null
          description: Endtime of the active period
          format: Unix time in mili seconds
          maxItems: 1
          minItems: 0
          nullable: true
          type: number
        links:
          properties:
            feeds:
              format: url
              maxItems: 1
              minItems: 1
              type: string
            mbox:
              format: url
              maxItems: 1
              minItems: 1
              type: string
            parent:
              default: null
              description: Connection url of the first connection with the Qiy Node
              format: url
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
            references:
              format: url
              maxItems: 1
              minItems: 1
              type: string
            self:
              format: url
              maxItems: 1
              minItems: 1
              type: string
          type: object
        pid:
          maxItems: 1
          minItems: 1
          type: string
        state:
          enum:
          - connected
          - expired
          maxItems: 1
          minItems: 1
          type: string
      type: object
    connectionList:
      properties:
        result:
          items:
            $ref: '#/components/schemas/connection'
          maxItems: 1
          minItems: 1
          type: array
      type: object
    dataReferenceReceivedv2Callback:
      $ref: '#/components/schemas/dataReferenceReceivedv2Event'
    dataReferenceReceivedv2Event:
      description: See [Data Reference Received-v2 Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#data-reference-received-v2-event)
      properties:
        connectionUrl:
          format: url
          maxItems: 1
          minItems: 1
          type: string
        extraData:
          anyOf:
          - properties:
              protocol:
                description: Service type url
                format: url
                maxItems: 1
                minItems: 1
                type: string
              value:
                description: Feed id
                maxItems: 1
                minItems: 1
                type: string
            type: object
          - description: feed id
            type: string
        type:
          description: Event type
          enum:
          - DATA_REFERENCE_RECEIVED2
          maxItems: 1
          minItems: 1
          type: string
      type: object
    eventCallbackEndpointUrls:
      properties:
        DATA_REFERENCE_RECEIVED2:
          type: string
        STATE_HANDLED:
          type: string
      type: object
    feedAccessResponse:
      description: The feed response format is described in the service type description
    feedDetails:
      properties:
        connection:
          description: Connection url
          format: url
          maxItems: '1'
          minItems: '1'
          type: string
        created:
          description: Creation datetimestamp
          format: Unix time in mili seconds
          maxItems: '1'
          minItems: '1'
          type: number
        lastUpdated:
          description: Last updated datetimestamp
          format: Unix time in mili seconds
          maxItems: '1'
          minItems: '1'
          type: number
        protocol:
          description: Service type url
          format: url
          maxItems: '1'
          minItems: '1'
          type: string
        status:
          description: Feed status
          enum:
          - Created
          - Message sent
          - Sending message failed
          maxItems: '1'
          minItems: '1'
          type: string
      type: object
    feedId:
      description: Feed id
      format: ascii no whitespace
      type: string
    feedList:
      description: Feeds by service type url as property name
      properties:
        '[\x00-\x7F]+':
          $ref: '#/components/schemas/feedDetails'
      type: object
      x-patternProperties:
        '[\x00-\x7F]+':
          $ref: '#/components/schemas/feedDetails'
    feedRequest:
      properties:
        input:
          default: null
          description: Optional body for Feed request callback body
          format: base64-encoded byte array
          maxItems: 1
          minItems: 0
          nullable: true
          type: string
        protocol:
          description: Service type url
          format: url
          maxItems: 1
          minItems: 1
          type: string
        text:
          description: Feed request remark
          maxItems: 1
          minItems: 1
          type: string
      type: object
    feedRequestResponse:
      properties:
        feedId:
          maxItems: 1
          minItems: 1
          type: string
        protocol:
          description: Service type url
          format: url
          maxItems: 1
          minItems: 1
          type: string
      type: object
    feedsAccessRequest:
      description: Access requests by feed id as property name
      properties:
        '[\x00-\x7F]+':
          properties:
            input:
              default: null
              description: Optional body for the access request for the given feed
                id
              format: base64-encoded byte array
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
          type: object
      type: object
      x-patternProperties:
        '[\x00-\x7F]+':
          properties:
            input:
              default: null
              description: Optional body for the access request for the given feed
                id
              format: base64-encoded byte array
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
          type: object
    feedsAccessResponse:
      description: Feed access responses by feed id as property name
      properties:
        '[\x00-\x7F]+':
          properties:
            content-type:
              maxItems: 1
              minItems: 1
              type: string
            error:
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
            output:
              format: base64-encoded byte array
              maxItems: 1
              minItems: 1
              type: string
          type: object
      type: object
      x-patternProperties:
        '[\x00-\x7F]+':
          properties:
            content-type:
              maxItems: 1
              minItems: 1
              type: string
            error:
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
            output:
              format: base64-encoded byte array
              maxItems: 1
              minItems: 1
              type: string
          type: object
    message:
      properties:
        inbound:
          maxItems: 1
          minItems: 1
          type: boolean
        payload:
          description: Payload
          format: ascii
          maxItems: 1
          minItems: 1
          type: string
        processed:
          maxItems: 1
          minItems: 1
          type: boolean
        protocol:
          format: url
          maxItems: 1
          minItems: 1
          type: string
        refSerialNr:
          maxItems: 1
          minItems: 0
          type: number
        sent:
          maxItems: 1
          minItems: 1
          type: boolean
        serialNr:
          maxItems: 1
          minItems: 1
          type: number
        text:
          maxItems: 1
          minItems: 1
          type: string
      type: object
    messageList:
      properties:
        result:
          items:
            $ref: '#/components/schemas/message'
          maxItems: 1
          minItems: 1
          type: array
      type: object
    nodeCreateRequestBody:
      properties:
        alias:
          description: Qiy Node alias, returned in connect tokens.
          maxItems: 1
          minItems: 1
          type: string
        id:
          description: Qiy Node id.
          format: uuid
          maxItems: 1
          minItems: 1
          type: string
        password:
          description: See [Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication).
          format: uuid
          maxItems: 1
          minItems: 1
          type: string
        publicKey:
          description: Public key to be used to authenticate future requests.
          maxItems: 1
          minItems: 1
          type: string
      type: object
    nodeSettings:
      properties:
        askDappre:
          type: string
        usePersistentId:
          type: string
      type: object
    protocol:
      description: Service type url
      example: https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1
      format: url
      type: string
    qiyNodeCredential:
      description: See [Qiy Node Credential](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#qiy-node-credential).
      properties:
        id:
          description: Qiy Node id.
          format: uuid
          maxItems: 1
          minItems: 1
          type: string
        password:
          description: Transport Password for [Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication).
          format: uuid
          maxItems: 1
          minItems: 1
          type: string
        privateKey:
          description: RSA private key for [User Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-authentication).
          maxItems: 1
          minItems: 1
          type: string
      type: object
    routingFailedEvent:
      description: See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)
      properties:
        extraData:
          maxItems: 1
          minItems: 1
          properties:
            connectToken:
              description: Connection token url of the connect token that was used
                to request the connection
              format: url
              maxItems: 1
              minItems: 1
              type: string
          type: object
        type:
          enum:
          - ROUTING_FAILED
          maxItems: 1
          minItems: 1
          type: string
      type: object
    serviceEndpointFeedAccessRequest:
      description: Service endpoint access requests by feed id as property name
      properties:
        '[\x00-\x7F]+':
          properties:
            input:
              default: null
              description: Optional body for the access request for the given feed
                id
              format: base64-encoded byte array
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
          type: object
      type: object
      x-patternProperties:
        '[\x00-\x7F]+':
          properties:
            input:
              default: null
              description: Optional body for the access request for the given feed
                id
              format: base64-encoded byte array
              maxItems: 1
              minItems: 0
              nullable: true
              type: string
          type: object
    serviceEndpointFeedRequest:
      properties:
        connection:
          description: Connection url
          format: url
          maxItems: 1
          minItems: 1
          type: string
        mbox:
          format: url
          maxItems: 1
          minItems: 1
          type: string
        message:
          allOf:
          - $ref: '#/components/schemas/message'
          - maxItems: 1
            minItems: 1
            properties:
              thirdPartyRef:
                format: ascii no whitespace
                maxItems: 1
                minItems: 1
                type: string
            type: object
        pid:
          maxItems: 1
          minItems: 1
          type: ''
      type: object
    stateHandledEvent:
      description: See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)
      properties:
        connectionUrl:
          description: Connection url of the new connection with the Qiy Node
          format: url
          maxItems: 1
          minItems: 1
          type: string
        extraData:
          maxItems: 1
          minItems: 1
          properties:
            PID:
              maxItems: 1
              minItems: 1
              type: string
            connectToken:
              description: Connection token url of the connect token that was used
                to create the connection
              format: url
              maxItems: 1
              minItems: 1
              type: string
            newUri:
              description: Connection url of the first connection with the Qiy Node
              format: url
              maxItems: 1
              minItems: 1
              type: string
          type: object
        type:
          enum:
          - STATE_HANDLED
          maxItems: 1
          minItems: 1
          type: string
      type: object
    transportAuthentication:
      description: Also requires user authentication, see [Qiy Node Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication)
      in: header
      name: password
      type: apiKey
    userActionMessageEvent:
      description: See [User Action Message Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-action-message-event)
      properties:
        connectionUrl:
          description: Connection url of the new connection with the Qiy Node
          format: url
          maxItems: 1
          minItems: 1
          type: string
        extraData:
          description: Url of the user action message
          format: url
          maxItems: 1
          minItems: 1
          type: string
        type:
          enum:
          - USER_ACTION_MESSAGE
          maxItems: 1
          minItems: 1
          type: string
      type: object
    userAuthentication:
      description: Also requires app authentication, see [Qiy Node User Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-authentication)
      in: header
      name: Authorization-node-QTN
      type: apiKey
  securitySchemes:
    appAuthentication:
      $ref: '#/components/schemas/appAuthentication'
    transportAuthentication:
      $ref: '#/components/schemas/transportAuthentication'
    userAuthentication:
      $ref: '#/components/schemas/userAuthentication'
  x-events:
    dataReferenceReceivedv2:
      data:
        examples: {}
        schema:
          $ref: '#/components/schemas/dataReferenceReceivedv2Event'
      description: See [Data Reference Received-v2 Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#data-reference-received-v2-event)
      event: DATA_REFERENCE_RECEIVED2
    routingFailed:
      data:
        schema:
          $ref: '#/components/schemas/routingFailedEvent'
      description: See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)
      event: ROUTING_FAILED
    stateHandled:
      data:
        schema:
          $ref: '#/components/schemas/stateHandledEvent'
      description: See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)
      event: STATE_HANDLED
    userActionMessage:
      data:
        examples:
          example:
            connectionUrl: https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e
            extraData: https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4
            type: USER_ACTION_MESSAGE
        schema:
          $ref: '#/components/schemas/userActionMessageEvent'
      description: See [User Action Message Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-action-message-event)
      event: USER_ACTION_MESSAGE
      examples:
        example: 'event: USER_ACTION_MESSAGE

          data: { "type": "USER_ACTION_MESSAGE", "connectionUrl": "https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e",
          "extraData": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4"}

          '
info:
  description: To get started with [this api](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md),
    you need a developer key. You can get it [here](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#service-desk)
  externalDocs:
    description: Find more info here
    url: https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md
  license:
    name: Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International
      Public License
    url: https://creativecommons.org/licenses/by-nc-nd/4.0/
  title: Qiy Node API - General
  version: 1.1.0
openapi: 3.0.0
paths:
  /ActionEndpoint:
    post:
      description: See [Set feed source](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#set-feed-source)
      operationId: Set feed source
      responses:
        '200':
          $ref: '#/components/responses/feedSourceSet'
        default:
          $ref: '#/components/responses/default'
      tags:
      - controller.feed.source.set
      x-url: $ActionEndpointUrl
    put:
      description: See [Add feed source](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#add-feed-source)
      operationId: Add feed source
      responses:
        '200':
          $ref: '#/components/responses/feedSourceAdd'
        default:
          $ref: '#/components/responses/default'
      tags:
      - controller.feed.source.add
      x-url: $ActionEndpointUrl
  /ActionMessageEndpoint:
    get:
      description: See [Get action message](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-action-message)
      operationId: Get action message
      responses:
        '200':
          $ref: '#/components/responses/actionMessage'
        default:
          $ref: '#/components/responses/default'
      tags:
      - controller.action message.get
      x-url: $ActionMessageEndpointUrl
  /ActionMessageListEndpoint:
    get:
      description: See [List action messages](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-action-messages)
      operationId: List action messages
      responses:
        '200':
          $ref: '#/components/responses/actionMessageList'
        default:
          $ref: '#/components/responses/default'
      tags:
      - controller.action messages.list
      x-url: $ActionMessageListEndpointUrl
  /ConnectTokenCreateEndpoint:
    post:
      callbacks:
        stateHandled:
          $ref: '#/components/callbacks/stateHandled'
      description: See [Request connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-connect-token)
        or [Register connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#register-connect-token)
      operationId: Request or register connect token
      requestBody:
        content:
          application/json:
            examples:
              Register connect token:
                $ref: '#/components/examples/connectTokenRegisterRequestBody'
              Request connect token:
                $ref: '#/components/examples/connectTokenRequestRequestBody'
            schema:
              $ref: '#/components/schemas/connectTokenCreateEndpointPostRequestBody'
        description: Connect token request or registration details
      responses:
        '201':
          $ref: '#/components/responses/connectTokenCreateEndpointPostRequest'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - client.connect token.register
      - controller.connect token.register
      - server.connect token.register
      - client.connect token.request
      - controller.connect token.request
      - server.connect token.request
      x-events:
        stateHandled:
          $ref: '#/components/x-events/stateHandled'
        userActionMessage:
          $ref: '#/components/x-events/userActionMessage'
      x-url: $ConnectTokenCreateEndpointUrl
  /ConnectTokenEndpoint:
    get:
      description: See [Get connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-connect-token)
      operationId: Get connect token
      responses:
        '200':
          $ref: '#/components/responses/connectToken'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.connect token.get
      - controller.connect token.get
      - server.connect token.get
      x-url: $ConnectTokenEndpointUrl
  /ConnectTokenListEndpoint:
    get:
      description: See [List connect tokens](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-connect-tokens)
      operationId: List connect tokens
      responses:
        '200':
          $ref: '#/components/responses/connectTokenList'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.connect tokens.list
      - controller.connect tokens.list
      - server.connect tokens.list
      x-url: $ConnectTokenListEndpointUrl
  /ConnectionCreateEndpoint:
    post:
      description: See [Request connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-connection)
      operationId: Request connection
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/connectTokenJson'
            schema:
              $ref: '#/components/schemas/connectTokenPropertyJson'
        description: Connect token json
      responses:
        '201':
          $ref: '#/components/responses/connectionCreated'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - client.connection.request
      - controller.connection.request
      - server.connection.request
      x-events:
        routingFailed:
          $ref: '#/components/x-events/routingFailed'
        stateHandled:
          $ref: '#/components/x-events/stateHandled'
      x-url: $ConnectionCreateEndpointUrl
  /ConnectionEndpoint:
    get:
      description: See [Get connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-connection)
      operationId: Get connection
      responses:
        '200':
          $ref: '#/components/responses/connection'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.connection.get
      - controller.connection.get
      - server.connection.get
      x-url: $ConnectionEndpointUrl
  /ConnectionFeedsEndpoint:
    post:
      callbacks:
        dataReferenceReceivedv2:
          $ref: '#/components/callbacks/dataReferenceReceivedv2'
      description: See [Request for feed](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-for-feed)
      operationId: Request for feed
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/feedRequest'
            schema:
              $ref: '#/components/schemas/feedRequest'
        description: Feed request details
      responses:
        '201':
          $ref: '#/components/responses/feedRequestResponse'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - client.feed.request
      x-events:
        dataReferenceReceivedv2:
          $ref: '#/components/x-events/dataReferenceReceivedv2'
      x-url: $ConnectionFeedsEndpointUrl
  /ConnectionListEndpoint:
    get:
      description: See [List connections](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-connections)
      operationId: List connections
      responses:
        '200':
          $ref: '#/components/responses/connectionList'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.connections.list
      - controller.connections.list
      - server.connections.list
      x-url: $ConnectionListEndpointUrl
  /EventCallbacksEndpoint:
    get:
      description: See [Get event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-event-callback-endpoints)
      operationId: Get event callback endpoints
      responses:
        '200':
          $ref: '#/components/responses/eventCallbacksResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.configuration.event callback endpoints.get
      - server.configuration.event callback endpoints.get
      x-url: $EventCallbacksEndpointUrl
    put:
      description: See [Set event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#set-event-callback-endpoints)
      operationId: Set event callback endpoints
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/eventCallbackEndpointUrls'
            schema:
              $ref: '#/components/schemas/eventCallbackEndpointUrls'
        description: Callback endpoint urls
      responses:
        '200':
          $ref: '#/components/responses/eventCallbacksResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.configuration.event callback endpoints.set
      - server.configuration.event callback endpoints.set
      x-url: $EventCallbacksEndpointUrl
  /EventsEndpoint:
    get:
      description: See [Start listening to events](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#start-listening-to-events)
      operationId: Start listening to events
      responses:
        '200':
          $ref: '#/components/responses/eventsResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - controller.events
      x-url: $EventsEndpointUrl
  /FeedsEndpoint:
    get:
      description: See [List feeds](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-feeds)
      operationId: List feeds
      parameters:
      - $ref: '#/components/parameters/protocol'
      responses:
        '200':
          $ref: '#/components/responses/feedList'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.feeds.list
      x-url: $FeedsEndpointUrl
    post:
      description: See [Access feeds](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#access-feeds)
      operationId: Access feeds
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/feedsAccessRequest'
            schema:
              $ref: '#/components/schemas/feedsAccessRequest'
        description: Access feeds request details
      responses:
        '200':
          $ref: '#/components/responses/feedsAccessResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.feeds.access
      x-url: $FeedsEndpointUrl
  /FeedsEndpoint/{feedId}:
    post:
      description: See [Access feed](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#access-feed)
      operationId: Access feed
      parameters:
      - $ref: '#/components/parameters/feedId'
      requestBody:
        content:
          text:
            examples:
              example:
                description: 'An example of base64-encoded input. NB: the enclosing
                  quotes must not be part of the body.'
                value: VGhlIGJvZHkgbWF5IGluY2x1ZGUgYSBzZXJ2aWNlIGVuZHBvaW50IGZlZWQgYWNjZXNzIHJlcXVlc3QgYm9keSBlbmNvZGVkIGFzIGEgYmFzZS02NCBlbmNvZGVkIGJ5dGUgYXJyYXku
        description: Access request details
      responses:
        '200':
          $ref: '#/components/responses/feedAccessResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.feed.access
      x-url: $FeedsEndpointUrl/$feedId
  /MessagesEndpoint:
    get:
      description: See [List messages](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-messages)
      operationId: List messages
      responses:
        '200':
          $ref: '#/components/responses/messageList'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - client.messages.list
      - controller.messages.list
      - server.messages.list
      x-url: $MessagesEndpointUrl
    post:
      description: See [Send message](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#send-message)
      operationId: Send message
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/messageNew'
            schema:
              $ref: '#/components/schemas/message'
      responses:
        '200':
          $ref: '#/components/responses/messageSent'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - client.message.send
      - controller.message.send
      - server.message.send
      x-url: $MessagesEndpointUrl
  /NodeCreateEndpoint:
    post:
      description: See [Request creation of Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-creation-of-qiy-node)
      operationId: Request creation of Qiy Node
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/nodeCreateRequestBody'
            schema:
              $ref: '#/components/schemas/nodeCreateRequestBody'
        description: Request details
      responses:
        '201':
          $ref: '#/components/responses/nodeCreated'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      tags:
      - controller.node.request
      x-url: $NodeCreateEndpointUrl
  /NodeSettingsEndpoint:
    get:
      description: See [Get node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-node-settings)
      operationId: Get node settings
      responses:
        '200':
          $ref: '#/components/responses/nodeSettingsResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.configuration.node settings.get
      - controller.configuration.node settings.get
      - server.configuration.node settings.get
      x-url: $NodeSettingsEndpointUrl
    put:
      description: See [Set node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#set-node-settings)
      operationId: Set node settings
      requestBody:
        content:
          application/json:
            examples:
              example:
                $ref: '#/components/examples/nodeSettings'
            schema:
              $ref: '#/components/schemas/nodeSettings'
        description: Node settings
      responses:
        '200':
          $ref: '#/components/responses/nodeSettingsResponse'
        default:
          $ref: '#/components/responses/default'
      tags:
      - client.configuration.node settings.set
      - controller.configuration.node settings.set
      - server.configuration.node settings.set
      x-url: $NodeSettingsEndpointUrl
  /SelfEndpoint:
    delete:
      description: See [Delete Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#delete-qiy-node)
      operationId: Delete Qiy Node
      responses:
        '201':
          $ref: '#/components/responses/nodeDeleted'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - transportAuthentication: []
      - userAuthentication: []
      tags:
      - controller.node.delete
      x-url: $SelfEndpointUrl
  /api:
    get:
      description: See [GET Api](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#api-info)
        and/or [Get endpoint addresses](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-endpoint-addresses)
      operationId: api
      responses:
        '200':
          $ref: '#/components/responses/api'
        default:
          $ref: '#/components/responses/default'
      security:
      - appAuthentication: []
      - userAuthentication: []
      tags:
      - api
security:
- appAuthentication: []
- userAuthentication: []
servers:
- description: Proxy server
  url: https://qiytesttool.pythonanywhere.com/qiy_nodes/qiy_node_api/proxy/v0
- description: Development 2 server
  url: https://dev2-user.testonly.digital-me.nl/user/v0
- description: Acceptance server
  url: https://user.dolden.net/user/v0
- description: Production server
  url: https://user.digital-me.nl/user/v0
