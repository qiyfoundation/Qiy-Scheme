{
    "openapi": "3.0.0",
    "info": {
        "title": "Qiy Node API - General",
        "description": "To get started with [this api](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md), you need a developer key. You can get it [here](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#service-desk)",
        "externalDocs": {
            "description": "Find more info here",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md"
        },
        "version": "1.1.0",
        "license": {
            "name": "Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License",
            "url": "https://creativecommons.org/licenses/by-nc-nd/4.0/"
        }
    },
    "servers": [
        {
            "url": "https://qiytesttool.pythonanywhere.com/qiy_nodes/qiy_node_api/proxy/v0",
            "description": "Proxy server"
        },
        {
            "url": "https://dev2-user.testonly.digital-me.nl/user/v0",
            "description": "Development 2 server"
        },
        {
            "url": "https://user.dolden.net/user/v0",
            "description": "Acceptance server"
        },
        {
            "url": "https://user.digital-me.nl/user/v0",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api": {
            "get": {
                "tags": [
                    "api"
                ],
                "description": "See [GET Api](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#api-info) and/or [Get endpoint addresses](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-endpoint-addresses)",
                "operationId": "api",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/api"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectionCreateEndpoint": {
            "post": {
                "tags": [
                    "client.connection.request",
                    "controller.connection.request",
                    "server.connection.request"
                ],
                "description": "See [Request connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-connection)",
                "operationId": "Request connection",
                "x-url": "$ConnectionCreateEndpointUrl",
                "requestBody": {
                    "description": "Connect token json",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectTokenPropertyJson"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/connectTokenJson"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/connectionCreated"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "x-events": {
                    "stateHandled": {
                        "$ref": "#/components/x-events/stateHandled"
                    },
                    "routingFailed": {
                        "$ref": "#/components/x-events/routingFailed"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectionEndpoint": {
            "get": {
                "tags": [
                    "client.connection.get",
                    "controller.connection.get",
                    "server.connection.get"
                ],
                "description": "See [Get connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-connection)",
                "operationId": "Get connection",
                "x-url": "$ConnectionEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connection"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectionListEndpoint": {
            "get": {
                "tags": [
                    "client.connections.list",
                    "controller.connections.list",
                    "server.connections.list"
                ],
                "description": "See [List connections](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-connections)",
                "operationId": "List connections",
                "x-url": "$ConnectionListEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectionList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectTokenEndpoint": {
            "get": {
                "tags": [
                    "client.connect token.get",
                    "controller.connect token.get",
                    "server.connect token.get"
                ],
                "description": "See [Get connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-connect-token)",
                "operationId": "Get connect token",
                "x-url": "$ConnectTokenEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectToken"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectTokenCreateEndpoint": {
            "post": {
                "tags": [
                    "client.connect token.register",
                    "controller.connect token.register",
                    "server.connect token.register",
                    "client.connect token.request",
                    "controller.connect token.request",
                    "server.connect token.request"
                ],
                "description": "See [Request connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-connect-token) or [Register connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#register-connect-token)",
                "operationId": "Request or register connect token",
                "x-url": "$ConnectTokenCreateEndpointUrl",
                "requestBody": {
                    "description": "Connect token request or registration details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectTokenCreateEndpointPostRequestBody"
                            },
                            "examples": {
                                "Request connect token": {
                                    "$ref": "#/components/examples/connectTokenRequestRequestBody"
                                },
                                "Register connect token": {
                                    "$ref": "#/components/examples/connectTokenRegisterRequestBody"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/connectTokenCreateEndpointPostRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "callbacks": {
                    "stateHandled": {
                        "$ref": "#/components/callbacks/stateHandled"
                    }
                },
                "x-events": {
                    "stateHandled": {
                        "$ref": "#/components/x-events/stateHandled"
                    },
                    "userActionMessage": {
                        "$ref": "#/components/x-events/userActionMessage"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectTokenListEndpoint": {
            "get": {
                "tags": [
                    "client.connect tokens.list",
                    "controller.connect tokens.list",
                    "server.connect tokens.list"
                ],
                "description": "See [List connect tokens](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-connect-tokens)",
                "operationId": "List connect tokens",
                "x-url": "$ConnectTokenListEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectTokenList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/EventCallbacksEndpoint": {
            "put": {
                "tags": [
                    "client.configuration.event callback endpoints.set",
                    "server.configuration.event callback endpoints.set"
                ],
                "description": "See [Set event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#set-event-callback-endpoints)",
                "operationId": "Set event callback endpoints",
                "x-url": "$EventCallbacksEndpointUrl",
                "requestBody": {
                    "description": "Callback endpoint urls",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/eventCallbackEndpointUrls"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/eventCallbackEndpointUrls"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventCallbacksResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "get": {
                "tags": [
                    "client.configuration.event callback endpoints.get",
                    "server.configuration.event callback endpoints.get"
                ],
                "description": "See [Get event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-event-callback-endpoints)",
                "operationId": "Get event callback endpoints",
                "x-url": "$EventCallbacksEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventCallbacksResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/EventsEndpoint": {
            "get": {
                "tags": [
                    "controller.events"
                ],
                "description": "See [Start listening to events](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#start-listening-to-events)",
                "operationId": "Start listening to events",
                "x-url": "$EventsEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/MessagesEndpoint": {
            "get": {
                "tags": [
                    "client.messages.list",
                    "controller.messages.list",
                    "server.messages.list"
                ],
                "description": "See [List messages](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#list-messages)",
                "operationId": "List messages",
                "x-url": "$MessagesEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/messageList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "client.message.send",
                    "controller.message.send",
                    "server.message.send"
                ],
                "description": "See [Send message](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#send-message)",
                "operationId": "Send message",
                "x-url": "$MessagesEndpointUrl",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/message"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/messageNew"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/messageSent"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/NodeCreateEndpoint": {
            "post": {
                "tags": [
                    "controller.node.request"
                ],
                "description": "See [Request creation of Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#request-creation-of-qiy-node)",
                "operationId": "Request creation of Qiy Node",
                "x-url": "$NodeCreateEndpointUrl",
                "requestBody": {
                    "description": "Request details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/nodeCreateRequestBody"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/nodeCreateRequestBody"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/nodeCreated"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    }
                ]
            }
        },
        "/NodeSettingsEndpoint": {
            "get": {
                "tags": [
                    "client.configuration.node settings.get",
                    "controller.configuration.node settings.get",
                    "server.configuration.node settings.get"
                ],
                "description": "See [Get node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#get-node-settings)",
                "operationId": "Get node settings",
                "x-url": "$NodeSettingsEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/nodeSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "tags": [
                    "client.configuration.node settings.set",
                    "controller.configuration.node settings.set",
                    "server.configuration.node settings.set"
                ],
                "description": "See [Set node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#set-node-settings)",
                "operationId": "Set node settings",
                "x-url": "$NodeSettingsEndpointUrl",
                "requestBody": {
                    "description": "Node settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/nodeSettings"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/nodeSettings"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/nodeSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/SelfEndpoint": {
            "delete": {
                "tags": [
                    "controller.node.delete"
                ],
                "description": "See [Delete Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#delete-qiy-node)",
                "operationId": "Delete Qiy Node",
                "x-url": "$SelfEndpointUrl",
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/nodeDeleted"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "appAuthentication": {
                "description": "See [Qiy Node App Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#app-authentication)",
                "type": "http",
                "scheme": "Basic"
            },
            "apiAppAuthenticatedResponse": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "object",
                        "properties": {
                            "create": {
                                "description": "[Node Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#node-create-endpoint) url",
                                "type": "string"
                            }
                        }
                    },
                    "serverTime": {
                        "description": "Server time in unix time in mili seconds.",
                        "type": "number"
                    },
                    "currentVersion": {
                        "type": "string"
                    }
                }
            },
            "apiResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/apiAppAuthenticatedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/apiUserAuthenticatedResponse"
                    }
                ]
            },
            "apiUserAuthenticatedResponse": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "object",
                        "properties": {
                            "amList": {
                                "description": "[Action Messages List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#action-messages-list-endpoint) url",
                                "type": "string"
                            },
                            "connections": {
                                "description": "[Connections List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connections-list-endpoint) url",
                                "type": "string"
                            },
                            "ctCreate": {
                                "description": "[Connect Token Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connect-token-create-endpoint) url",
                                "type": "string"
                            },
                            "ct-create": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "ctList": {
                                "description": "[Connect Token List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connect-token-list-endpoint) url",
                                "type": "string"
                            },
                            "ct-list": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "eventCallbacks": {
                                "description": "[Event Callbacks Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#event-callbacks-endpoint) url",
                                "type": "string"
                            },
                            "events": {
                                "description": "[Events Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#events-endpoint) url",
                                "type": "string"
                            },
                            "feeds": {
                                "description": "[Feeds Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#feeds-endpoint) url",
                                "type": "string"
                            },
                            "manRef": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "nodeSettings": {
                                "description": "[Node Settings Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#node-settings-endpoint) url",
                                "type": "string"
                            },
                            "ref": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "refs": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "scan": {
                                "description": "[Connection Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#connection-create-endpoint) url",
                                "type": "string"
                            },
                            "self": {
                                "description": "[Self Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#self-endpoint) url",
                                "type": "string"
                            },
                            "serviceCatalog": {
                                "description": "[Service Catalogue Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#service-catalogue-endpoint) url",
                                "type": "string"
                            },
                            "target-tempate": {
                                "description": "[Target Template Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#target-template-endpoint) url",
                                "type": "string"
                            }
                        }
                    },
                    "serverTime": {
                        "description": "Server time in unix time in mili seconds.",
                        "type": "number"
                    },
                    "currentVersion": {
                        "type": "string"
                    }
                }
            },
            "connection": {
                "type": "object",
                "properties": {
                    "activeFrom": {
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "activeUntil": {
                        "description": "Endtime of the active period",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "minItems": 0,
                        "default": null,
                        "maxItems": 1
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "feeds": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "mbox": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "parent": {
                                "description": "Connection url of the first connection with the Qiy Node",
                                "type": "string",
                                "format": "url",
                                "nullable": true,
                                "minItems": 0,
                                "default": null,
                                "maxItems": 1
                            },
                            "references": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "self": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        }
                    },
                    "pid": {
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "connected",
                            "expired"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "connectionList": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connection"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "connectToken": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyCreated"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyExpires"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyJson"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyLastUsed"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyLinks"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyName"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseBudget"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseSpend"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyValid"
                    }
                ]
            },
            "connectTokenCreateEndpointPostRequestBody": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyExpires"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyJson"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyName"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseBudget"
                    }
                ]
            },
            "connectTokenList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/connectToken"
                }
            },
            "connectTokenPropertyCreated": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Creation datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyExpires": {
                "type": "object",
                "properties": {
                    "expires": {
                        "description": "Expiration datetime",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyJson": {
                "type": "object",
                "properties": {
                    "json": {
                        "description": "Connect token json",
                        "type": "object",
                        "minItems": 1,
                        "maxItems": 1,
                        "properties": {
                            "identifier": {
                                "type": "string"
                            },
                            "tmpSecret": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "connectTokenPropertyLastUsed": {
                "type": "object",
                "properties": {
                    "lastUsed": {
                        "description": "Last used datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "default": null,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyLinks": {
                "type": "object",
                "properties": {
                    "links": {
                        "description": "Connect token links",
                        "type": "object",
                        "minItems": 1,
                        "maxItems": 1,
                        "properties": {
                            "delete": {
                                "type": "string",
                                "format": "url"
                            },
                            "self": {
                                "type": "string",
                                "format": "url"
                            },
                            "update": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "connectTokenPropertyName": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyUseBudget": {
                "type": "object",
                "properties": {
                    "useBudget": {
                        "description": "Number of connections that can be created with the connect token",
                        "type": "number",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyUseSpend": {
                "type": "object",
                "properties": {
                    "useSpend": {
                        "description": "Number of connections that have been created with the connect token",
                        "type": "number",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyValid": {
                "type": "object",
                "properties": {
                    "valid": {
                        "description": "Whether the connect token can be used or not",
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "eventCallbackEndpointUrls": {
                "type": "object",
                "properties": {
                    "DATA_REFERENCE_RECEIVED2": {
                        "type": "string"
                    },
                    "STATE_HANDLED": {
                        "type": "string"
                    }
                }
            },
            "message": {
                "type": "object",
                "properties": {
                    "inbound": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "payload": {
                        "description": "Payload",
                        "type": "string",
                        "format": "ascii",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "processed": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "protocol": {
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "refSerialNr": {
                        "type": "number",
                        "minItems": 0,
                        "maxItems": 1
                    },
                    "sent": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "serialNr": {
                        "type": "number",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "text": {
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "messageList": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/message"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "nodeCreateRequestBody": {
                "type": "object",
                "properties": {
                    "alias": {
                        "description": "Qiy Node alias, returned in connect tokens.",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "password": {
                        "description": "See [Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication).",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "publicKey": {
                        "description": "Public key to be used to authenticate future requests.",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "id": {
                        "description": "Qiy Node id.",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "nodeSettings": {
                "type": "object",
                "properties": {
                    "askDappre": {
                        "type": "string"
                    },
                    "usePersistentId": {
                        "type": "string"
                    }
                }
            },
            "protocol": {
                "description": "Service type url",
                "type": "string",
                "format": "url",
                "example": "https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1"
            },
            "qiyNodeCredential": {
                "description": "See [Qiy Node Credential](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#qiy-node-credential).",
                "type": "object",
                "properties": {
                    "password": {
                        "description": "Transport Password for [Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication).",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "privateKey": {
                        "description": "RSA private key for [User Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-authentication).",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "id": {
                        "description": "Qiy Node id.",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "routingFailedEvent": {
                "description": "See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ROUTING_FAILED"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "type": "object",
                        "properties": {
                            "connectToken": {
                                "description": "Connection token url of the connect token that was used to request the connection",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "stateHandledEvent": {
                "description": "See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "STATE_HANDLED"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "connectionUrl": {
                        "description": "Connection url of the new connection with the Qiy Node",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "type": "object",
                        "properties": {
                            "newUri": {
                                "description": "Connection url of the first connection with the Qiy Node",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "connectToken": {
                                "description": "Connection token url of the connect token that was used to create the connection",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "PID": {
                                "type": "string",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "transportAuthentication": {
                "description": "Also requires user authentication, see [Qiy Node Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#transport-authentication)",
                "type": "apiKey",
                "name": "password",
                "in": "header"
            },
            "userAuthentication": {
                "description": "Also requires app authentication, see [Qiy Node User Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-authentication)",
                "type": "apiKey",
                "name": "Authorization-node-QTN",
                "in": "header"
            }
        },
        "responses": {
            "api": {
                "description": "Api response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/apiResponse"
                        },
                        "examples": {
                            "apiGetAppAuthenticated": {
                                "$ref": "#/components/examples/apiGetAppAuthenticated"
                            },
                            "apiGetUserAuthenticated": {
                                "$ref": "#/components/examples/apiGetUserAuthenticated"
                            }
                        }
                    }
                }
            },
            "connection": {
                "description": "Connection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connection"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connection"
                            }
                        }
                    }
                }
            },
            "connectionCreated": {
                "description": "Connection created"
            },
            "connectionList": {
                "description": "Connection list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectionList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectionList"
                            }
                        }
                    }
                }
            },
            "connectToken": {
                "description": "Connect token",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectToken"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenNew"
                            }
                        }
                    }
                }
            },
            "connectTokenCreateEndpointPostRequest": {
                "description": "Connect token created or registered",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectToken"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenNew"
                            }
                        }
                    }
                }
            },
            "connectTokenList": {
                "description": "Connect token list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectTokenList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenList"
                            }
                        }
                    }
                }
            },
            "default": {
                "description": "Default response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "number",
                                                "enum": [
                                                    401
                                                ]
                                            },
                                            "message": {
                                                "type": "string",
                                                "pattern": "Authentication required!"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/authenticationRequired"
                            }
                        }
                    }
                }
            },
            "eventCallbacksResponse": {
                "description": "Event callbacks set",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/eventCallbackEndpointUrls"
                        }
                    },
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/eventCallbackEndpointUrls"
                        }
                    }
                }
            },
            "eventsResponse": {
                "description": "Events",
                "content": {
                    "text/event-stream": {},
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/eventsResponseExample"
                        }
                    }
                }
            },
            "messageList": {
                "description": "Message list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/messageList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/messageList"
                            }
                        }
                    }
                }
            },
            "messageSent": {
                "description": "Message sent"
            },
            "nodeCreated": {
                "description": "Node created"
            },
            "nodeDeleted": {
                "description": "Node deleted"
            },
            "nodeSettingsResponse": {
                "description": "Node settings",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/nodeSettings"
                        }
                    },
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/nodeSettings"
                        }
                    }
                }
            }
        },
        "examples": {
            "apiGetAppAuthenticated": {
                "value": {
                    "links": {
                        "create": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners"
                    },
                    "serverTime": 1568366519145,
                    "currentVersion": "1.0.67-SNAPSHOT"
                }
            },
            "apiGetUserAuthenticated": {
                "value": {
                    "links": {
                        "amList": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/mbox/user/action/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ct-create": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "scan": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549",
                        "nodeSettings": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ref": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549/single",
                        "manRef": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/reference-management/31962764-596b-4eff-b80d-9cd32a65a549",
                        "refs": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549",
                        "eventCallbacks": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549/eventcallbacks",
                        "self": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners/id/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ctList": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "feeds": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/31962764-596b-4eff-b80d-9cd32a65a549/feeds",
                        "target-template": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/~id~",
                        "serviceCatalog": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/servicecatalog/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ctCreate": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ct-list": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "connections": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549",
                        "events": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/events/31962764-596b-4eff-b80d-9cd32a65a549"
                    },
                    "serverTime": 1568374440048,
                    "id": "31962764-596b-4eff-b80d-9cd32a65a549",
                    "currentVersion": "1.0.67-SNAPSHOT"
                }
            },
            "authenticationRequired": {
                "value": {
                    "errors": [
                        {
                            "status": 401,
                            "message": "Authentication required!"
                        }
                    ]
                }
            },
            "connection": {
                "value": {
                    "activeFrom": 1551796945000,
                    "links": {
                        "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/016706d0-b3c1-4104-b6de-aacdf33230c0/feeds",
                        "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0",
                        "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0",
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0"
                    },
                    "pid": "aAQt41QqCvJuy8DMBayDCQ==",
                    "state": "connected"
                }
            },
            "connectionExpired": {
                "value": {
                    "state": "expired",
                    "activeFrom": 1544686272000,
                    "activeUntil": 1544693472000,
                    "pid": "vjQK/rOw6CoSuWPZy6K93w==",
                    "links": {
                        "parent": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                        "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds",
                        "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                        "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3"
                    }
                }
            },
            "connectionList": {
                "value": {
                    "result": [
                        {
                            "state": "expired",
                            "activeFrom": 1544686272000,
                            "activeUntil": 1544693472000,
                            "pid": "vjQK/rOw6CoSuWPZy6K93w==",
                            "links": {
                                "parent": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                                "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds",
                                "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                                "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3"
                            }
                        },
                        {
                            "state": "connected",
                            "activeFrom": 1544685886000,
                            "pid": "nfIols4wKn9bBVkqnkHKbw==",
                            "links": {
                                "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/7f4dd669-9381-40e1-8f6e-4c9904476d8a/feeds",
                                "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a"
                            }
                        }
                    ]
                }
            },
            "connectTokenRequestRequestBody": {
                "value": {
                    "expires": 2349020398,
                    "useBudget": 1
                }
            },
            "connectTokenRegisterRequestBody": {
                "value": {
                    "expires": 2349020398,
                    "useBudget": 1,
                    "json": {
                        "identifier": "Service Provider 1",
                        "tmpSecret": "9paMAI61N6b5dPCCYD4IiS==",
                        "target": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/sp1connectTokenOffline2target"
                    }
                }
            },
            "connectTokenJson": {
                "value": {
                    "identifier": "mgd_dev2",
                    "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                    "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                }
            },
            "connectTokenList": {
                "value": [
                    {
                        "created": 1542882407000,
                        "json": {
                            "identifier": "mgd_dev2",
                            "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                            "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                        },
                        "lastUsed": 1542882800000,
                        "links": {
                            "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                            "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                            "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                        },
                        "useBudget": 1,
                        "useSpend": 1,
                        "valid": true
                    },
                    {
                        "created": 1544537654000,
                        "json": {
                            "identifier": "mgd_dev2",
                            "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/beb82a8f-4e7f-4927-b272-cceb24402cc0",
                            "tmpSecret": "5rqlN8YDI3rGP46cl+kE8Q=="
                        },
                        "lastUsed": 1544537657000,
                        "links": {
                            "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd",
                            "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd",
                            "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd"
                        },
                        "useBudget": 1,
                        "useSpend": 1,
                        "valid": true
                    }
                ]
            },
            "connectTokenNew": {
                "value": {
                    "created": 1542882407000,
                    "json": {
                        "identifier": "mgd_dev2",
                        "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                        "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                    },
                    "lastUsed": null,
                    "links": {
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                    },
                    "useBudget": 1,
                    "useSpend": 0,
                    "valid": true
                }
            },
            "connectTokenUsed": {
                "value": {
                    "created": 1542882407000,
                    "json": {
                        "identifier": "mgd_dev2",
                        "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                        "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                    },
                    "lastUsed": 1542882800000,
                    "links": {
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                    },
                    "useBudget": 1,
                    "useSpend": 1,
                    "valid": true
                }
            },
            "eventCallbackEndpointUrls": {
                "value": {
                    "DATA_REFERENCE_RECEIVED2": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/dataReferenceReceivedCallbackEndpointUrl",
                    "STATE_HANDLED": "stateHandledCallbackEndpointUrl"
                }
            },
            "eventsResponseExample": {
                "value": ":ping"
            },
            "messageList": {
                "value": {
                    "result": [
                        {
                            "inbound": false,
                            "payload": "eyJwdWJsaWNLZXkiOiJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXU0cXNYMmlISzE0MzhXZjRCcGxiMjBqYXdjN0U3Mng0MTMwUW9QaE9MajByM0VSTi8wSmpjK3FoaU1QQVBEVCtTa1NQbmdGckN2RTRhR0pIOWIwdm8rWVkvcW1FbVFzdGw0d2s5cEFHTnVJdHh0TStab0RoTHdkRHBETTc0QkE4aFZ3cXJHQVA5UUovNktibFFLbXRPT09NY0tTUXB0RXNFQ3NFQytMZThpTkJhU2ozRnBMbWpHUWkxYjZXMG1UMU1aYzVFUjRTOFVmN2hkajhpS0JRc3hFcjdZUThqZ2FXdE1rakZOU0tZemt2Vi9zU3FtL2t0akh4Q21MUk5yRXdvaDBvZ1V1S1FEMnJuK1piWXovalBMWjRZOFd4Q3d2Wi9jVjFkMDc5Wk16S0hYWVBLT3J1RnJOWTZjZng5STRsckEyVHdsSXpOQVd5RHQzN1ZsQ2xEUUlEQVFBQiIsInBlcnNpc3RlbnRJZCI6ImxOMUxEN2lBSGZ2bDVvTWRCZ0k4VWc9PSIsInByb3RvY29scyI6WyJodHRwczovL3Byb3RvY29scy5xaXkubmwvaW52aXRlcy92LjEuMC4wIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2NsZWFudXAvbWVzc2FnZXMvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9zdGF0ZS92LjEuMC4wIiwiaHR0cHM6Ly9naXRodWIuY29tL3FpeWZvdW5kYXRpb24vZmlLa3MvdHJlZS9tYXN0ZXIvc2NoZW1hL3YxIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2RhdGEtcmVmZXJlbmNlL3BlZXIvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9yZWZlcmVuY2UtbWFuYWdlbWVudC8xLjAuMCJdLCJuYW1lIjoibWdkX2RldjIifQ==",
                            "processed": false,
                            "protocol": "https://protocols.qiy.nl/domain-details/v.1.0.0",
                            "serialNr": 1,
                            "sent": true,
                            "text": "Our details"
                        },
                        {
                            "inbound": true,
                            "payload": "eyJwZXJzaXN0ZW50SWQiOiJLandGTzlGekRyQUM3Q2Q4WURKajh3PT0ifQ==",
                            "processed": true,
                            "protocol": "https://protocols.qiy.nl/reuse-persistent-id/v.1.0.0",
                            "refSerialNr": 1,
                            "sent": false,
                            "serialNr": 2,
                            "text": "Known by this persistent id"
                        }
                    ]
                }
            },
            "messageNew": {
                "value": {
                    "protocol": "https://example.com/qiy/node/message",
                    "refSerialNr": -1,
                    "text": "Hello world!",
                    "payload": "SGVsbG8gV29ybGQh"
                }
            },
            "nodeCreateRequestBody": {
                "value": {
                    "alias": "Your Service Provider",
                    "id": "cb06fb8e-4e48-4eb1-8b5f-a46e9eef1308",
                    "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0TK8dMRxvXp66teemQe/tzUi26LBWfkO0pWGqyzmnNO6ISALt+rgEPl5mhqztAU4xI9iE/L9dCzC3snb2OQT+2/IaV9ilt1UAmZhyuogPeTKykPRFR2oT51wWoIuG4hD0x6iBhFCorn087Te99oS1RwS1RR5wFjIs/ol3ldawZ29xemsskmPEWJ/QpfpauBxvSbZEXRy15cAWnWO9yVzizUszwNjP8Ca0/K7NKa+lOtp09egO12SBMfX871AI44wWkZqPsr+O5cpo8Srw+90dbETA1Ypno3lpel2lBMQaf0+Srmjd/bJs9dlaXCTljoLt2uvOmriDSI6eSJZ7FxH4wIDAQAB",
                    "password": "9b449623-f361-425b-bca8-8c23c159e4c0",
                    "nodeSettings": {
                        "askDappre": "no",
                        "usePersistentId": "yes"
                    }
                }
            },
            "nodeSettings": {
                "value": {
                    "askDappre": "no",
                    "usePersistentId": "yes"
                }
            },
            "stateHandledEvent": {
                "value": {
                    "type": "STATE_HANDLED",
                    "connectionUrl": "https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/3b5151e3-adc7-403a-a31a-8bd504e2c8ae",
                    "extraData": {
                        "newUri": "https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/ce5b2dd5-1bdd-41aa-b0ad-d0afa2e9a3cb",
                        "connectToken": "https://dev1-user.testonly.digital-me.nl/user/connecttokens/509f79f8-6562-49cd-bb24-4163557d7e59/7ced41dc-76ff-469e-9fa0-3f34c73d0a2b",
                        "PID": "9GqX94/EoOcD47hCvBQ+eg=="
                    }
                }
            }
        },
        "securitySchemes": {
            "appAuthentication": {
                "$ref": "#/components/schemas/appAuthentication"
            },
            "transportAuthentication": {
                "$ref": "#/components/schemas/transportAuthentication"
            },
            "userAuthentication": {
                "$ref": "#/components/schemas/userAuthentication"
            }
        },
        "callbacks": {
            "stateHandled": {
                "$stateHandledCallbackEndpointUrl": {
                    "post": {
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/stateHandledEvent"
                                    },
                                    "examples": {
                                        "example": {
                                            "$ref": "#/components/examples/stateHandledEvent"
                                        }
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                }
            }
        },
        "x-events": {
            "routingFailed": {
                "description": "See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)",
                "event": "ROUTING_FAILED",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/routingFailedEvent"
                    }
                }
            },
            "stateHandled": {
                "description": "See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)",
                "event": "STATE_HANDLED",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/stateHandledEvent"
                    }
                }
            },
            "userActionMessage": {
                "description": "See [User Action Message Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/review-board/Qiy-Node/Qiy%20Node%20API.md#user-action-message-event)",
                "event": "USER_ACTION_MESSAGE",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/userActionMessageEvent"
                    },
                    "examples": {
                        "example": {
                            "type": "USER_ACTION_MESSAGE",
                            "connectionUrl": "https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e",
                            "extraData": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4"
                        }
                    }
                },
                "examples": {
                    "example": "event: USER_ACTION_MESSAGE\ndata: { \"type\": \"USER_ACTION_MESSAGE\", \"connectionUrl\": \"https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e\", \"extraData\": \"https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4\"}\n"
                }
            }
        }
    },
    "security": [
        {
            "appAuthentication": []
        },
        {
            "userAuthentication": []
        }
    ]
}
