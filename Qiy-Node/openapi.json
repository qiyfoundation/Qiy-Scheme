{
    "openapi": "3.0.0",
    "info": {
        "title": "Qiy Node API",
        "description": "Find more info here: [Qiy Node API](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md)",
        "externalDocs": {
            "description": "Find more info here",
            "url": "https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md"
        },
        "version": "1.1.0",
        "license": {
            "name": "Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License",
            "url": "https://creativecommons.org/licenses/by-nc-nd/4.0/"
        }
    },
    "servers": [
        {
            "url": "https://qiytesttool.pythonanywhere.com/qiy_nodes/qiy_node_api/proxy/v1",
            "description": "Proxy server"
        },
        {
            "url": "https://dev2-user.testonly.digital-me.nl/user/v1",
            "description": "Development 2 server"
        },
        {
            "url": "https://user.dolden.net/user/v1",
            "description": "Acceptance server"
        }
    ],
    "paths": {
        "/api": {
            "get": {
                "tags": [
                    "api"
                ],
                "description": "See [GET Api](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#api-info) and/or [Get endpoint addresses](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-endpoint-addresses)",
                "operationId": "api",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/api"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ActionEndpoint": {
            "post": {
                "tags": [
                    "control"
                ],
                "description": "See [Set feed source](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#set-feed-source)",
                "operationId": "Set feed source",
                "x-url": "$ActionEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/feedSourceSet"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "tags": [
                    "control"
                ],
                "description": "See [Add feed source](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#add-feed-source)",
                "operationId": "Add feed source",
                "x-url": "$ActionEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/feedSourceAdd"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ActionMessageEndpoint": {
            "get": {
                "tags": [
                    "control"
                ],
                "description": "See [Get action message](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-action-message)",
                "operationId": "Get action message",
                "x-url": "$ActionMessageEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/actionMessage"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ActionMessageListEndpoint": {
            "get": {
                "tags": [
                    "control"
                ],
                "description": "See [List action messages](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#list-action-messages)",
                "operationId": "List action messages",
                "x-url": "$ActionMessageListEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/actionMessageList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectionCreateEndpoint": {
            "post": {
                "tags": [
                    "control"
                ],
                "description": "See [Request connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#request-connection)",
                "operationId": "Request connection",
                "x-url": "$ConnectionCreateEndpointUrl",
                "requestBody": {
                    "description": "Connect token json",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectTokenPropertyJson"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/connectTokenJson"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/connectionCreated"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "x-events": {
                    "stateHandled": {
                        "$ref": "#/components/x-events/stateHandled"
                    },
                    "routingFailed": {
                        "$ref": "#/components/x-events/routingFailed"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectionEndpoint": {
            "get": {
                "tags": [
                    "client",
                    "control",
                    "server"
                ],
                "description": "See [Get connection](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-connection)",
                "operationId": "Get connection",
                "x-url": "$ConnectionEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connection"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectionFeedsEndpoint": {
            "post": {
                "tags": [
                    "client"
                ],
                "description": "See [Request for feed](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#request-for-feed)",
                "operationId": "Request for feed",
                "x-url": "$ConnectionFeedsEndpointUrl",
                "requestBody": {
                    "description": "Feed request details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/feedRequest"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/feedRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/feedRequestResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "callbacks": {
                    "dataReferenceReceivedv2": {
                        "$ref": "#/components/callbacks/dataReferenceReceivedv2"
                    }
                },
                "x-events": {
                    "dataReferenceReceivedv2": {
                        "$ref": "#/components/x-events/dataReferenceReceivedv2"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectionListEndpoint": {
            "get": {
                "tags": [
                    "client",
                    "control",
                    "server"
                ],
                "description": "See [List connections](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#list-connections)",
                "operationId": "List connects",
                "x-url": "$ConnectionListEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectionList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectTokenEndpoint": {
            "get": {
                "tags": [
                    "client",
                    "control",
                    "server"
                ],
                "description": "See [Get connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-connect-token)",
                "operationId": "Get connect token",
                "x-url": "$ConnectTokenEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectToken"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/ConnectTokenCreateEndpoint": {
            "post": {
                "tags": [
                    "client",
                    "server"
                ],
                "description": "See [Request connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#request-connect-token) or [Register connect token](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#register-connect-token)",
                "operationId": "Request or register connect token",
                "x-url": "$ConnectTokenCreateEndpointUrl",
                "requestBody": {
                    "description": "Connect token request or registration details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectTokenCreateEndpointPostRequestBody"
                            },
                            "examples": {
                                "Request connect token": {
                                    "$ref": "#/components/examples/connectTokenRequestRequestBody"
                                },
                                "Register connect token": {
                                    "$ref": "#/components/examples/connectTokenRegisterRequestBody"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/connectTokenCreateEndpointPostRequest"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "callbacks": {
                    "stateHandled": {
                        "$ref": "#/components/callbacks/stateHandled"
                    }
                },
                "x-events": {
                    "stateHandled": {
                        "$ref": "#/components/x-events/stateHandled"
                    },
                    "userActionMessage": {
                        "$ref": "#/components/x-events/userActionMessage"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/ConnectTokenListEndpoint": {
            "get": {
                "tags": [
                    "client",
                    "server"
                ],
                "description": "See [List connect tokens](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#list-connect-tokens)",
                "operationId": "List connect tokens",
                "x-url": "$ConnectTokenListEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/connectTokenList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/EventCallbacksEndpoint": {
            "put": {
                "tags": [
                    "client",
                    "server"
                ],
                "description": "See [Set event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#set-event-callback-endpoints)",
                "operationId": "Set event callback endpoints",
                "x-url": "$EventCallbacksEndpointUrl",
                "requestBody": {
                    "description": "Callback endpoint urls",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/eventCallbackEndpointUrls"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/eventCallbackEndpointUrls"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventCallbacksResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "get": {
                "tags": [
                    "client",
                    "server"
                ],
                "description": "See [Get event callback endpoints](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-event-callback-endpoints)",
                "operationId": "Get event callback endpoints",
                "x-url": "$EventCallbacksEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventCallbacksResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/EventsEndpoint": {
            "get": {
                "tags": [
                    "control"
                ],
                "description": "See [Start listening to events](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#start-listening-to-events)",
                "operationId": "Start listening to events",
                "x-url": "$EventsEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/eventsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/FeedsEndpoint": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "See [List feeds](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#list-feeds)",
                "operationId": "List feeds",
                "x-url": "$FeedsEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/feedList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "post": {
                "tags": [
                    "client"
                ],
                "description": "See [Access feeds](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#access-feeds)",
                "operationId": "Access feeds",
                "x-url": "$FeedsEndpointUrl",
                "requestBody": {
                    "description": "Access feeds request details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/feedsAccessRequest"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/feedsAccessRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/feedsAccessResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/FeedsEndpoint/{feedId}": {
            "post": {
                "tags": [
                    "client"
                ],
                "description": "See [Access feed](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#access-feed)",
                "operationId": "Access feed",
                "x-url": "$FeedsEndpointUrl/$feedId",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/feedId"
                    }
                ],
                "requestBody": {
                    "description": "Access request details",
                    "content": {
                        "text": {
                            "examples": {
                                "example": {
                                    "description": "An example of base64-encoded input. NB: the enclosing quotes must not be part of the body.",
                                    "value": "VGhlIGJvZHkgbWF5IGluY2x1ZGUgYSBzZXJ2aWNlIGVuZHBvaW50IGZlZWQgYWNjZXNzIHJlcXVlc3QgYm9keSBlbmNvZGVkIGFzIGEgYmFzZS02NCBlbmNvZGVkIGJ5dGUgYXJyYXku"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/feedAccessResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/MessagesEndpoint": {
            "get": {
                "tags": [
                    "message"
                ],
                "description": "See [List messages](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#list-messages)",
                "operationId": "List messages",
                "x-url": "$MessagesEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/messageList"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "message"
                ],
                "description": "See [Send message](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#send-message)",
                "operationId": "Send message",
                "x-url": "$MessagesEndpointUrl",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/message"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/messageNew"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/messageSent"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    },
                    {
                        "transportAuthentication": []
                    },
                    {
                        "userAuthentication": []
                    }
                ]
            }
        },
        "/NodeCreateEndpoint": {
            "post": {
                "tags": [
                    "control"
                ],
                "description": "See [Request creation of Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#request-creation-of-qiy-node)",
                "operationId": "Request creation of Qiy Node",
                "x-url": "$NodeCreateEndpointUrl",
                "requestBody": {
                    "description": "Request details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/nodeCreateRequestBody"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/nodeCreateRequestBody"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/nodeCreated"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    }
                ]
            }
        },
        "/NodeSettingsEndpoint": {
            "get": {
                "tags": [
                    "node"
                ],
                "description": "See [Get node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-node-settings)",
                "operationId": "Get node settings",
                "x-url": "$NodeSettingsEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/nodeSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "tags": [
                    "node"
                ],
                "description": "See [Set node settings](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#set-node-settings)",
                "operationId": "Set node settings",
                "x-url": "$NodeSettingsEndpointUrl",
                "requestBody": {
                    "description": "Node settings",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/nodeSettings"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/nodeSettings"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/nodeSettingsResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/SelfEndpoint": {
            "delete": {
                "tags": [
                    "node"
                ],
                "description": "See [Delete Qiy Node](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#delete-qiy-node)",
                "operationId": "Delete Qiy Node",
                "x-url": "$SelfEndpointUrl",
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/nodeDeleted"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "appAuthentication": []
                    }
                ]
            }
        },
        "/ServiceCatalogueEndpoint": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "See [Get service catalogue](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#get-service-catalogue)",
                "operationId": "Get service catalogue",
                "x-url": "$ServiceCatalogueEndpointUrl",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/serviceCatalogueResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "tags": [
                    "server"
                ],
                "description": "See [Set service catalogue](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#set-service-catalogue)",
                "operationId": "Set service catalogue",
                "x-url": "$ServiceCatalogueEndpointUrl",
                "requestBody": {
                    "description": "Service catalogue",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/serviceCatalogue"
                            },
                            "examples": {
                                "example": {
                                    "$ref": "#/components/examples/serviceCatalogue"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/serviceCatalogueResponse"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "callbacks": {
                    "feedRequest": {
                        "$ref": "#/components/callbacks/feedRequest"
                    },
                    "accessFeed": {
                        "$ref": "#/components/callbacks/accessFeed"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "actionMessage": {
                "type": "object",
                "properties": {
                    "connection": {
                        "description": "Connection url of the related connection",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "created": {
                        "description": "Creation datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "handle": {
                                    "type": "string",
                                    "format": "url",
                                    "minItems": 1,
                                    "maxItems": 1
                                },
                                "self": {
                                    "type": "string",
                                    "format": "url",
                                    "minItems": 1,
                                    "maxItems": 1
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "message": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/message"
                            },
                            {
                                "type": "object",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        ]
                    },
                    "optionPIDs": {
                        "type": "object",
                        "x-patternProperties": {
                            "$pidRex": {
                                "description": "Action url",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "relayOptions": {
                        "type": "object",
                        "x-patternProperties": {
                            "$nodeIdRex": {
                                "description": "Action url",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "actionMessageList": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/actionMessage"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "appAuthentication": {
                "description": "See [Qiy Node App Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#app-authentication)",
                "type": "http",
                "scheme": "Basic"
            },
            "apiAppAuthenticatedResponse": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "object",
                        "properties": {
                            "create": {
                                "description": "[Node Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#node-create-endpoint) url",
                                "type": "string"
                            }
                        }
                    },
                    "serverTime": {
                        "description": "Server time in unix time in mili seconds.",
                        "type": "number"
                    },
                    "currentVersion": {
                        "type": "string"
                    }
                }
            },
            "apiResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/apiAppAuthenticatedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/apiUserAuthenticatedResponse"
                    }
                ]
            },
            "apiUserAuthenticatedResponse": {
                "type": "object",
                "properties": {
                    "links": {
                        "type": "object",
                        "properties": {
                            "amList": {
                                "description": "[Action Messages List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#action-messages-list-endpoint) url",
                                "type": "string"
                            },
                            "connections": {
                                "description": "[Connections List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#connections-list-endpoint) url",
                                "type": "string"
                            },
                            "ctCreate": {
                                "description": "[Connect Token Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#connect-token-create-endpoint) url",
                                "type": "string"
                            },
                            "ct-create": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "ctList": {
                                "description": "[Connect Token List Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#connect-token-list-endpoint) url",
                                "type": "string"
                            },
                            "ct-list": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "eventCallbacks": {
                                "description": "[Event Callbacks Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#event-callbacks-endpoint) url",
                                "type": "string"
                            },
                            "events": {
                                "description": "[Events Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#events-endpoint) url",
                                "type": "string"
                            },
                            "feeds": {
                                "description": "[Feeds Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#feeds-endpoint) url",
                                "type": "string"
                            },
                            "manRef": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "nodeSettings": {
                                "description": "[Node Settings Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#node-settings-endpoint) url",
                                "type": "string"
                            },
                            "ref": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "refs": {
                                "description": "deprecated",
                                "type": "string"
                            },
                            "scan": {
                                "description": "[Connection Create Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#connection-create-endpoint) url",
                                "type": "string"
                            },
                            "self": {
                                "description": "[Self Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#self-endpoint) url",
                                "type": "string"
                            },
                            "serviceCatalog": {
                                "description": "[Service Catalogue Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#service-catalogue-endpoint) url",
                                "type": "string"
                            },
                            "target-tempate": {
                                "description": "[Target Template Endpoint](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#target-template-endpoint) url",
                                "type": "string"
                            }
                        }
                    },
                    "serverTime": {
                        "description": "Server time in unix time in mili seconds.",
                        "type": "number"
                    },
                    "currentVersion": {
                        "type": "string"
                    }
                }
            },
            "connection": {
                "type": "object",
                "properties": {
                    "activeFrom": {
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "activeUntil": {
                        "description": "Endtime of the active period",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "minItems": 0,
                        "default": null,
                        "maxItems": 1
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "feeds": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "mbox": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "parent": {
                                "description": "Connection url of the first connection with the Qiy Node",
                                "type": "string",
                                "format": "url",
                                "nullable": true,
                                "minItems": 0,
                                "default": null,
                                "maxItems": 1
                            },
                            "references": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "self": {
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        }
                    },
                    "pid": {
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "connected",
                            "expired"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "connectionList": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connection"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "connectToken": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyCreated"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyExpires"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyJson"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyLastUsed"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyLinks"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyName"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseBudget"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseSpend"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyValid"
                    }
                ]
            },
            "connectTokenCreateEndpointPostRequestBody": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyExpires"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyJson"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyName"
                    },
                    {
                        "$ref": "#/components/schemas/connectTokenPropertyUseBudget"
                    }
                ]
            },
            "connectTokenList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/connectToken"
                }
            },
            "connectTokenPropertyCreated": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "Creation datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyExpires": {
                "type": "object",
                "properties": {
                    "expires": {
                        "description": "Expiration datetime",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyJson": {
                "type": "object",
                "properties": {
                    "json": {
                        "description": "Connect token json",
                        "type": "object",
                        "minItems": 1,
                        "maxItems": 1,
                        "properties": {
                            "identifier": {
                                "type": "string"
                            },
                            "tmpSecret": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "connectTokenPropertyLastUsed": {
                "type": "object",
                "properties": {
                    "lastUsed": {
                        "description": "Last used datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "nullable": true,
                        "default": null,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyLinks": {
                "type": "object",
                "properties": {
                    "links": {
                        "description": "Connect token links",
                        "type": "object",
                        "minItems": 1,
                        "maxItems": 1,
                        "properties": {
                            "delete": {
                                "type": "string",
                                "format": "url"
                            },
                            "self": {
                                "type": "string",
                                "format": "url"
                            },
                            "update": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "connectTokenPropertyName": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyUseBudget": {
                "type": "object",
                "properties": {
                    "useBudget": {
                        "description": "Number of connections that can be created with the connect token",
                        "type": "number",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyUseSpend": {
                "type": "object",
                "properties": {
                    "useSpend": {
                        "description": "Number of connections that have been created with the connect token",
                        "type": "number",
                        "nullable": true,
                        "default": null,
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "connectTokenPropertyValid": {
                "type": "object",
                "properties": {
                    "valid": {
                        "description": "Whether the connect token can be used or not",
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "dataReferenceReceivedv2Event": {
                "description": "See [Data Reference Received-v2 Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#data-reference-received-v2-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "Event type",
                        "type": "string",
                        "enum": [
                            "DATA_REFERENCE_RECEIVED2"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "connectionUrl": {
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "type": "object",
                        "properties": {
                            "protocol": {
                                "description": "Service type url",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "value": {
                                "description": "Feed id",
                                "type": "string",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        }
                    }
                }
            },
            "eventCallbackEndpointUrls": {
                "type": "object",
                "properties": {
                    "DATA_REFERENCE_RECEIVED2": {
                        "type": "string"
                    },
                    "STATE_HANDLED": {
                        "type": "string"
                    }
                }
            },
            "feedDetails": {
                "type": "object",
                "properties": {
                    "connection": {
                        "description": "Connection url",
                        "type": "string",
                        "format": "url",
                        "minItems": "1",
                        "maxItems": "1"
                    },
                    "created": {
                        "description": "Creation datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "minItems": "1",
                        "maxItems": "1"
                    },
                    "lastUpdated": {
                        "description": "Last updated datetimestamp",
                        "type": "number",
                        "format": "Unix time in mili seconds",
                        "minItems": "1",
                        "maxItems": "1"
                    },
                    "protocol": {
                        "description": "Service type url",
                        "type": "string",
                        "format": "url",
                        "minItems": "1",
                        "maxItems": "1"
                    },
                    "status": {
                        "description": "Feed status",
                        "type": "string",
                        "enum": [
                            "Created",
                            "Message sent",
                            "Sending message failed"
                        ],
                        "minItems": "1",
                        "maxItems": "1"
                    }
                }
            },
            "feedId": {
                "description": "Feed id",
                "type": "string",
                "format": "ascii no whitespace"
            },
            "feedList": {
                "type": "object",
                "x-patternProperties": {
                    "[\\x00-\\x7F]+": {
                        "$ref": "#/components/schemas/feedDetails"
                    }
                }
            },
            "feedRequest": {
                "type": "object",
                "properties": {
                    "input": {
                        "description": "Optional body for Feed request callback body",
                        "type": "string",
                        "format": "base64-encoded byte array",
                        "nullable": true,
                        "minItems": 0,
                        "default": null,
                        "maxItems": 1
                    },
                    "protocol": {
                        "description": "Service type url",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "text": {
                        "description": "Feed request remark",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "feedRequestResponse": {
                "type": "object",
                "properties": {
                    "protocol": {
                        "description": "Service type url",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "feedId": {
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "feedAccessResponse": {
                "description": "The feed response format is described in the service type description"
            },
            "feedsAccessRequest": {
                "type": "object",
                "x-patternProperties": {
                    "[\\x00-\\x7F]+": {
                        "type": "object",
                        "properties": {
                            "input": {
                                "description": "Optional body for the access request for the given feed id",
                                "type": "string",
                                "format": "base64-encoded byte array",
                                "nullable": true,
                                "minItems": 0,
                                "default": null,
                                "maxItems": 1
                            }
                        }
                    }
                }
            },
            "feedsAccessResponse": {
                "type": "object",
                "x-patternProperties": {
                    "[\\x00-\\x7F]+": {
                        "type": "object",
                        "properties": {
                            "content-type": {
                                "type": "string",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "output": {
                                "type": "string",
                                "format": "base64-encoded byte array",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        }
                    }
                }
            },
            "message": {
                "type": "object",
                "properties": {
                    "inbound": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "payload": {
                        "description": "Payload",
                        "type": "string",
                        "format": "ascii",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "processed": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "protocol": {
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "refSerialNr": {
                        "type": "number",
                        "minItems": 0,
                        "maxItems": 1
                    },
                    "sent": {
                        "type": "boolean",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "serialNr": {
                        "type": "number",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "text": {
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "messageList": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/message"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "nodeCreateRequestBody": {
                "type": "object",
                "properties": {
                    "alias": {
                        "description": "Qiy Node alias, returned in connect tokens.",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "password": {
                        "description": "See [Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#transport-authentication).",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "publicKey": {
                        "description": "Public key to be used to authenticate future requests.",
                        "type": "string",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "id": {
                        "description": "Qiy Node id.",
                        "type": "string",
                        "format": "uuid",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "nodeSettings": {
                "type": "object",
                "properties": {
                    "askDappre": {
                        "type": "string"
                    },
                    "usePersistentId": {
                        "type": "string"
                    }
                }
            },
            "routingFailedEvent": {
                "description": "See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ROUTING_FAILED"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "type": "object",
                        "properties": {
                            "connectToken": {
                                "description": "Connection token url of the connect token that was used to request the connection",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "serviceCatalogue": {
                "type": "object",
                "x-patternProperties": {
                    "https?://[a-z0-9]+([-./]?[a-z0-9])*": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "external",
                                    "internal"
                                ]
                            },
                            "uri": {
                                "description": "Feed request endpoint url",
                                "type": "string",
                                "format": "url"
                            },
                            "method": {
                                "type": "string",
                                "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "SET"
                                ]
                            }
                        }
                    }
                }
            },
            "serviceEndpointFeedAccessRequest": {
                "type": "object",
                "x-patternProperties": {
                    "[\\x00-\\x7F]+": {
                        "type": "object",
                        "properties": {
                            "input": {
                                "description": "Optional body for the access request for the given feed id",
                                "type": "string",
                                "format": "base64-encoded byte array",
                                "nullable": true,
                                "minItems": 0,
                                "default": null,
                                "maxItems": 1
                            }
                        }
                    }
                }
            },
            "serviceEndpointFeedRequest": {
                "type": "object",
                "properties": {
                    "connection": {
                        "description": "Connection url",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "mbox": {
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "message": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/message"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "thirdPartyRef": {
                                        "type": "string",
                                        "format": "ascii no whitespace",
                                        "minItems": 1,
                                        "maxItems": 1
                                    }
                                },
                                "minItems": 1,
                                "maxItems": 1
                            }
                        ]
                    },
                    "pid": {
                        "type": "",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "stateHandledEvent": {
                "description": "See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "STATE_HANDLED"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "connectionUrl": {
                        "description": "Connection url of the new connection with the Qiy Node",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "type": "object",
                        "properties": {
                            "newUri": {
                                "description": "Connection url of the first connection with the Qiy Node",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "connectToken": {
                                "description": "Connection token url of the connect token that was used to create the connection",
                                "type": "string",
                                "format": "url",
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "PID": {
                                "type": "string",
                                "minItems": 1,
                                "maxItems": 1
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "transportAuthentication": {
                "description": "Also requires user authentication, see [Qiy Node Transport Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#transport-authentication)",
                "type": "apiKey",
                "name": "Authorization-node-QTN",
                "in": "header"
            },
            "userActionMessageEvent": {
                "description": "See [User Action Message Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#user-action-message-event)",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "USER_ACTION_MESSAGE"
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "connectionUrl": {
                        "description": "Connection url of the new connection with the Qiy Node",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "extraData": {
                        "description": "Url of the user action message",
                        "type": "string",
                        "format": "url",
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "userAuthentication": {
                "description": "Also requires app authentication, see [Qiy Node User Authentication](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#user-authentication)",
                "type": "apiKey",
                "name": "Authorization-node-QTN",
                "in": "header"
            }
        },
        "responses": {
            "api": {
                "description": "Api response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/apiResponse"
                        },
                        "examples": {
                            "apiGetAppAuthenticated": {
                                "$ref": "#/components/examples/apiGetAppAuthenticated"
                            },
                            "apiGetUserAuthenticated": {
                                "$ref": "#/components/examples/apiGetUserAuthenticated"
                            }
                        }
                    }
                }
            },
            "actionMessage": {
                "description": "Action Message",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/actionMessage"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/actionMessage"
                            }
                        }
                    }
                }
            },
            "actionMessageList": {
                "description": "Action Message list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/actionMessageList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/actionMessageList"
                            }
                        }
                    }
                }
            },
            "connection": {
                "description": "Connection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connection"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connection"
                            }
                        }
                    }
                }
            },
            "connectionCreated": {
                "description": "Connection created"
            },
            "connectionList": {
                "description": "Connection list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectionList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectionList"
                            }
                        }
                    }
                }
            },
            "connectToken": {
                "description": "Connect token",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectToken"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenNew"
                            }
                        }
                    }
                }
            },
            "connectTokenCreateEndpointPostRequest": {
                "description": "Connect token created or registered",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectToken"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenNew"
                            }
                        }
                    }
                }
            },
            "connectTokenList": {
                "description": "Connect token list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectTokenList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/connectTokenList"
                            }
                        }
                    }
                }
            },
            "default": {
                "description": "Default response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "number",
                                                "enum": [
                                                    401
                                                ]
                                            },
                                            "message": {
                                                "type": "string",
                                                "pattern": "Authentication required!"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/authenticationRequired"
                            }
                        }
                    }
                }
            },
            "feedRequestResponse": {
                "description": "Feed request response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/feedRequestResponse"
                        },
                        "examples": {
                            "feed": {
                                "$ref": "#/components/examples/feedRequestResponse"
                            }
                        }
                    }
                }
            },
            "feedAccessResponse": {
                "description": "Feed access response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/feedAccessResponse"
                        },
                        "examples": {
                            "Feed response": {
                                "$ref": "#/components/examples/feedAccessResponse"
                            }
                        }
                    }
                }
            },
            "feedList": {
                "description": "Feed list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/feedList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/feedList"
                            }
                        }
                    }
                }
            },
            "feedsAccessResponse": {
                "description": "Feeds access response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/feedsAccessResponse"
                        },
                        "examples": {
                            "Feeds response": {
                                "$ref": "#/components/examples/feedsAccessResponse"
                            }
                        }
                    }
                }
            },
            "feedSourceAdd": {
                "description": "Add feed source response"
            },
            "feedSourceSet": {
                "description": "Set feed source response"
            },
            "eventCallbacksResponse": {
                "description": "Event callbacks set",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/eventCallbackEndpointUrls"
                        }
                    },
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/eventCallbackEndpointUrls"
                        }
                    }
                }
            },
            "eventsResponse": {
                "description": "Events",
                "content": {
                    "text/event-stream": {},
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/eventsResponseExample"
                        }
                    }
                }
            },
            "messageList": {
                "description": "Message list",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/messageList"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/messageList"
                            }
                        }
                    }
                }
            },
            "messageSent": {
                "description": "Message sent"
            },
            "nodeCreated": {
                "description": "Node created"
            },
            "nodeDeleted": {
                "description": "Node deleted"
            },
            "nodeSettingsResponse": {
                "description": "Node settings",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/nodeSettings"
                        }
                    },
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/nodeSettings"
                        }
                    }
                }
            },
            "serviceCatalogueResponse": {
                "description": "Service catalogue",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/serviceCatalogue"
                        }
                    },
                    "examples": {
                        "example": {
                            "$ref": "#/components/examples/serviceCatalogue"
                        }
                    }
                }
            }
        },
        "parameters": {
            "feedId": {
                "name": "feedId",
                "in": "path",
                "required": true,
                "schema": {
                    "$ref": "#/components/schemas/feedId"
                }
            }
        },
        "examples": {
            "actionMessage": {
                "value": {
                    "connection": "https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e",
                    "created": 1562059030644,
                    "links": {
                        "self": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4",
                        "handle": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/handle/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                    },
                    "message": {
                        "serialNr": 5,
                        "text": "huh?",
                        "protocol": "http://bla.nl/events",
                        "inbound": true,
                        "sent": false,
                        "payload": "eyJrZXkiOiJ3K2pMeTEzZlhJVFpkS3lISy80TWRBPT0iLCJpbnB1dCI6bnVsbH0=",
                        "processed": true
                    },
                    "optionPIDs": {
                        "jRMCgeCzt3zFGDZuutuNvg==": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca",
                        "kpKugxcUU7AdJJgVUVuFnA==": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                    },
                    "relayOptions": {
                        "8f4edf58-73dd-4fee-b344-149c924f1605": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca",
                        "wip_feed_rp": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                    }
                }
            },
            "actionMessageList": {
                "value": {
                    "result": [
                        {
                            "connection": "https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e",
                            "created": 1562059030644,
                            "links": {
                                "self": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4",
                                "handle": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/handle/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                            },
                            "message": {
                                "serialNr": 5,
                                "text": "huh?",
                                "protocol": "http://bla.nl/events",
                                "inbound": true,
                                "sent": false,
                                "payload": "eyJrZXkiOiJ3K2pMeTEzZlhJVFpkS3lISy80TWRBPT0iLCJpbnB1dCI6bnVsbH0=",
                                "processed": true
                            },
                            "optionPIDs": {
                                "jRMCgeCzt3zFGDZuutuNvg==": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca",
                                "kpKugxcUU7AdJJgVUVuFnA==": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                            },
                            "relayOptions": {
                                "8f4edf58-73dd-4fee-b344-149c924f1605": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/aecbbae3-bd8a-4d94-a7f5-b8fe759dd0ca",
                                "wip_feed_rp": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind/4/e33b7dcc-a1f1-4195-893d-97698f0e4d8e"
                            }
                        }
                    ]
                }
            },
            "apiGetAppAuthenticated": {
                "value": {
                    "links": {
                        "create": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners"
                    },
                    "serverTime": 1568366519145,
                    "currentVersion": "1.0.67-SNAPSHOT"
                }
            },
            "apiGetUserAuthenticated": {
                "value": {
                    "links": {
                        "amList": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/mbox/user/action/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ct-create": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "scan": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549",
                        "nodeSettings": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ref": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549/single",
                        "manRef": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/reference-management/31962764-596b-4eff-b80d-9cd32a65a549",
                        "refs": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/references/31962764-596b-4eff-b80d-9cd32a65a549",
                        "eventCallbacks": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/nodesettings/31962764-596b-4eff-b80d-9cd32a65a549/eventcallbacks",
                        "self": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/owners/id/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ctList": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "feeds": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/31962764-596b-4eff-b80d-9cd32a65a549/feeds",
                        "target-template": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/~id~",
                        "serviceCatalog": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/servicecatalog/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ctCreate": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "ct-list": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connecttokens/31962764-596b-4eff-b80d-9cd32a65a549",
                        "connections": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/connections/user/31962764-596b-4eff-b80d-9cd32a65a549",
                        "events": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/events/31962764-596b-4eff-b80d-9cd32a65a549"
                    },
                    "serverTime": 1568374440048,
                    "id": "31962764-596b-4eff-b80d-9cd32a65a549",
                    "currentVersion": "1.0.67-SNAPSHOT"
                }
            },
            "authenticationRequired": {
                "value": {
                    "errors": [
                        {
                            "status": 401,
                            "message": "Authentication required!"
                        }
                    ]
                }
            },
            "connection": {
                "value": {
                    "activeFrom": 1551796945000,
                    "links": {
                        "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/016706d0-b3c1-4104-b6de-aacdf33230c0/feeds",
                        "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0",
                        "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0",
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/016706d0-b3c1-4104-b6de-aacdf33230c0"
                    },
                    "pid": "aAQt41QqCvJuy8DMBayDCQ==",
                    "state": "connected"
                }
            },
            "connectionExpired": {
                "value": {
                    "state": "expired",
                    "activeFrom": 1544686272000,
                    "activeUntil": 1544693472000,
                    "pid": "vjQK/rOw6CoSuWPZy6K93w==",
                    "links": {
                        "parent": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                        "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds",
                        "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                        "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3"
                    }
                }
            },
            "connectionList": {
                "value": {
                    "result": [
                        {
                            "state": "expired",
                            "activeFrom": 1544686272000,
                            "activeUntil": 1544693472000,
                            "pid": "vjQK/rOw6CoSuWPZy6K93w==",
                            "links": {
                                "parent": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                                "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/465571a1-d7e6-4d03-ae4b-f1a78b1463f3/feeds",
                                "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3",
                                "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/465571a1-d7e6-4d03-ae4b-f1a78b1463f3"
                            }
                        },
                        {
                            "state": "connected",
                            "activeFrom": 1544685886000,
                            "pid": "nfIols4wKn9bBVkqnkHKbw==",
                            "links": {
                                "self": "https://dev2-user.testonly.digital-me.nl/user/connections/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "feeds": "https://dev2-user.testonly.digital-me.nl/user/mgd_dev2/connections/7f4dd669-9381-40e1-8f6e-4c9904476d8a/feeds",
                                "references": "https://dev2-user.testonly.digital-me.nl/user/references/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a",
                                "mbox": "https://dev2-user.testonly.digital-me.nl/user/mbox/user/mgd_dev2/7f4dd669-9381-40e1-8f6e-4c9904476d8a"
                            }
                        }
                    ]
                }
            },
            "connectTokenRequestRequestBody": {
                "value": {
                    "expires": 2349020398,
                    "useBudget": 1
                }
            },
            "connectTokenRegisterRequestBody": {
                "value": {
                    "expires": 2349020398,
                    "useBudget": 1,
                    "json": {
                        "identifier": "Service Provider 1",
                        "tmpSecret": "9paMAI61N6b5dPCCYD4IiS==",
                        "target": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/sp1connectTokenOffline2target"
                    }
                }
            },
            "connectTokenJson": {
                "value": {
                    "identifier": "mgd_dev2",
                    "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                    "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                }
            },
            "connectTokenList": {
                "value": [
                    {
                        "created": 1542882407000,
                        "json": {
                            "identifier": "mgd_dev2",
                            "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                            "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                        },
                        "lastUsed": 1542882800000,
                        "links": {
                            "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                            "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                            "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                        },
                        "useBudget": 1,
                        "useSpend": 1,
                        "valid": true
                    },
                    {
                        "created": 1544537654000,
                        "json": {
                            "identifier": "mgd_dev2",
                            "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/beb82a8f-4e7f-4927-b272-cceb24402cc0",
                            "tmpSecret": "5rqlN8YDI3rGP46cl+kE8Q=="
                        },
                        "lastUsed": 1544537657000,
                        "links": {
                            "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd",
                            "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd",
                            "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/ed2135cd-3a87-4720-b14a-82522778decd"
                        },
                        "useBudget": 1,
                        "useSpend": 1,
                        "valid": true
                    }
                ]
            },
            "connectTokenNew": {
                "value": {
                    "created": 1542882407000,
                    "json": {
                        "identifier": "mgd_dev2",
                        "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                        "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                    },
                    "lastUsed": null,
                    "links": {
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                    },
                    "useBudget": 1,
                    "useSpend": 0,
                    "valid": true
                }
            },
            "connectTokenUsed": {
                "value": {
                    "created": 1542882407000,
                    "json": {
                        "identifier": "mgd_dev2",
                        "target": "https://dev2-issuer.testonly.digital-me.nl/issuer/routes/webhook/2fe11d37-ee84-45f9-b07c-629c11532407",
                        "tmpSecret": "tOCChOFtQiflrMGBPQfy8w=="
                    },
                    "lastUsed": 1542882800000,
                    "links": {
                        "self": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "delete": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40",
                        "update": "https://dev2-user.testonly.digital-me.nl/user/connecttokens/mgd_dev2/e95feef5-3fd4-4bcd-bb12-024633af8a40"
                    },
                    "useBudget": 1,
                    "useSpend": 1,
                    "valid": true
                }
            },
            "eventCallbackEndpointUrls": {
                "value": {
                    "DATA_REFERENCE_RECEIVED2": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/dataReferenceReceivedCallbackEndpointUrl",
                    "STATE_HANDLED": "stateHandledCallbackEndpointUrl"
                }
            },
            "eventsResponseExample": {
                "value": ":ping"
            },
            "dataReferenceReceivedv2Event": {
                "value": {
                    "type": "DATA_REFERENCE_RECEIVED2",
                    "connectionUrl": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid1sp1connectionUrl",
                    "extraData": {
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "value": "SjF1RFBNam14RmxEcW8rOVdzNkpHd1RZaFdBPQ=="
                    }
                }
            },
            "feedAccessResponse": {
                "value": {
                    "activities-heart": [
                        {
                            "customHeartRateZones": [],
                            "dateTime": "today",
                            "heartRateZones": [
                                {
                                    "caloriesOut": 138.8351,
                                    "max": 86,
                                    "min": 30,
                                    "minutes": 65,
                                    "name": "Out of Range"
                                },
                                {
                                    "caloriesOut": 309.96824,
                                    "max": 120,
                                    "min": 86,
                                    "minutes": 177,
                                    "name": "Fat Burn"
                                },
                                {
                                    "caloriesOut": 198.6678,
                                    "max": 146,
                                    "min": 120,
                                    "minutes": 59,
                                    "name": "Cardio"
                                },
                                {
                                    "caloriesOut": 8.1326,
                                    "max": 220,
                                    "min": 146,
                                    "minutes": 7,
                                    "name": "Peak"
                                }
                            ],
                            "value": "102.28"
                        }
                    ],
                    "activities-heart-intraday": {
                        "dataset": [
                            {
                                "time": "12:00:00",
                                "value": 111
                            },
                            {
                                "time": "12:01:00",
                                "value": 97
                            },
                            {
                                "time": "12:02:00",
                                "value": 112
                            },
                            {
                                "time": "12:03:00",
                                "value": 114
                            },
                            {
                                "time": "12:04:00",
                                "value": 136
                            }
                        ],
                        "datasetInterval": 1,
                        "datasetType": "minute"
                    }
                }
            },
            "feedList": {
                "value": {
                    "QZJ5MOWNEXARVTTBWMYZAO7ISYOQQOAU": {
                        "connection": "https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/43c5c576-c0d0-4fdd-8593-a57dacdb1a2f",
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "lastUpdated": 1565083591687,
                        "created": 1565083591605,
                        "status": "Created"
                    },
                    "CE22UFPUKSW77IA26A2OKHVKEA3RU6ES": {
                        "connection": "https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/43c5c576-c0d0-4fdd-8593-a57dacdb1a2f",
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "lastUpdated": 1565083781626,
                        "created": 1565083781575,
                        "status": "Message sent"
                    },
                    "PYSSVYZLIDBI5YDGHA6ONFWMTON4T2U3": {
                        "connection": "https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/f3f5c1d1-61c0-45fd-9faa-f7d377dd89e3",
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "lastUpdated": 1564985247945,
                        "created": 1564985247891,
                        "status": "Sending message failed"
                    },
                    "RIUDDVYZLIDBI5YDGHAONFWMTON4INH78": {
                        "connection": "https://dev2-user.testonly.digital-me.nl/user/connections/user/fp_rp_dev2/f3f5c1d1-61c0-45fd-9faa-f7d377dd89e3",
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "lastUpdated": 1564985247945,
                        "created": 1564985247891,
                        "status": "Ready to resolve"
                    }
                }
            },
            "feedRequest": {
                "value": {
                    "protocol": "https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1",
                    "text": "Requesting feed.",
                    "input": "Im9wdGlvbmFsIG9wZXJhdGlvbiBib2R5IGVuY29kZWQgYXMgYSBiYXNlNjQgZW5jb2RlZCBieXRlIGFycmF5Ig=="
                }
            },
            "feedRequestResponse": {
                "value": {
                    "protocol": "https://github.com/qiyfoundation/payment-due-list/tree/master/schema/v1",
                    "feedId": "3J2UVSFIAH6X77HXR4MVHBVNG46GWT3M"
                }
            },
            "feedsAccessRequest": {
                "value": {
                    "{{feed_id1}}": {
                        "input": "<optional json member with base-64 encrypted byte array>"
                    },
                    "{{feed_id2}}": {
                        "input": "<optional json member with base-64 encrypted byte array>"
                    }
                }
            },
            "feedsAccessResponse": {
                "value": {
                    "<feed_id1>": {
                        "content-type": "application/xml",
                        "output": "<base64-encoded feed_id1 access response>"
                    },
                    "<feed_id2>": {
                        "content-type": "application/json",
                        "output": "<base64-encoded feed_id2 access response>"
                    }
                }
            },
            "messageList": {
                "value": {
                    "result": [
                        {
                            "inbound": false,
                            "payload": "eyJwdWJsaWNLZXkiOiJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXU0cXNYMmlISzE0MzhXZjRCcGxiMjBqYXdjN0U3Mng0MTMwUW9QaE9MajByM0VSTi8wSmpjK3FoaU1QQVBEVCtTa1NQbmdGckN2RTRhR0pIOWIwdm8rWVkvcW1FbVFzdGw0d2s5cEFHTnVJdHh0TStab0RoTHdkRHBETTc0QkE4aFZ3cXJHQVA5UUovNktibFFLbXRPT09NY0tTUXB0RXNFQ3NFQytMZThpTkJhU2ozRnBMbWpHUWkxYjZXMG1UMU1aYzVFUjRTOFVmN2hkajhpS0JRc3hFcjdZUThqZ2FXdE1rakZOU0tZemt2Vi9zU3FtL2t0akh4Q21MUk5yRXdvaDBvZ1V1S1FEMnJuK1piWXovalBMWjRZOFd4Q3d2Wi9jVjFkMDc5Wk16S0hYWVBLT3J1RnJOWTZjZng5STRsckEyVHdsSXpOQVd5RHQzN1ZsQ2xEUUlEQVFBQiIsInBlcnNpc3RlbnRJZCI6ImxOMUxEN2lBSGZ2bDVvTWRCZ0k4VWc9PSIsInByb3RvY29scyI6WyJodHRwczovL3Byb3RvY29scy5xaXkubmwvaW52aXRlcy92LjEuMC4wIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2NsZWFudXAvbWVzc2FnZXMvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9zdGF0ZS92LjEuMC4wIiwiaHR0cHM6Ly9naXRodWIuY29tL3FpeWZvdW5kYXRpb24vZmlLa3MvdHJlZS9tYXN0ZXIvc2NoZW1hL3YxIiwiaHR0cHM6Ly9wcm90b2NvbHMucWl5Lm5sL2RhdGEtcmVmZXJlbmNlL3BlZXIvdi4xLjAuMCIsImh0dHBzOi8vcHJvdG9jb2xzLnFpeS5ubC9yZWZlcmVuY2UtbWFuYWdlbWVudC8xLjAuMCJdLCJuYW1lIjoibWdkX2RldjIifQ==",
                            "processed": false,
                            "protocol": "https://protocols.qiy.nl/domain-details/v.1.0.0",
                            "serialNr": 1,
                            "sent": true,
                            "text": "Our details"
                        },
                        {
                            "inbound": true,
                            "payload": "eyJwZXJzaXN0ZW50SWQiOiJLandGTzlGekRyQUM3Q2Q4WURKajh3PT0ifQ==",
                            "processed": true,
                            "protocol": "https://protocols.qiy.nl/reuse-persistent-id/v.1.0.0",
                            "refSerialNr": 1,
                            "sent": false,
                            "serialNr": 2,
                            "text": "Known by this persistent id"
                        }
                    ]
                }
            },
            "messageNew": {
                "value": {
                    "protocol": "https://example.com/qiy/node/message",
                    "refSerialNr": -1,
                    "text": "Hello world!",
                    "payload": "SGVsbG8gV29ybGQh"
                }
            },
            "nodeCreateRequestBody": {
                "value": {
                    "alias": "Your Service Provider",
                    "id": "cb06fb8e-4e48-4eb1-8b5f-a46e9eef1308",
                    "publicKey": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0TK8dMRxvXp66teemQe/tzUi26LBWfkO0pWGqyzmnNO6ISALt+rgEPl5mhqztAU4xI9iE/L9dCzC3snb2OQT+2/IaV9ilt1UAmZhyuogPeTKykPRFR2oT51wWoIuG4hD0x6iBhFCorn087Te99oS1RwS1RR5wFjIs/ol3ldawZ29xemsskmPEWJ/QpfpauBxvSbZEXRy15cAWnWO9yVzizUszwNjP8Ca0/K7NKa+lOtp09egO12SBMfX871AI44wWkZqPsr+O5cpo8Srw+90dbETA1Ypno3lpel2lBMQaf0+Srmjd/bJs9dlaXCTljoLt2uvOmriDSI6eSJZ7FxH4wIDAQAB",
                    "password": "9b449623-f361-425b-bca8-8c23c159e4c0",
                    "nodeSettings": {
                        "askDappre": "no",
                        "usePersistentId": "yes"
                    }
                }
            },
            "nodeSettings": {
                "value": {
                    "askDappre": "no",
                    "usePersistentId": "yes"
                }
            },
            "serviceCatalogue": {
                "value": {
                    "https://service-type-url.example": {
                        "type": "external",
                        "uri": "https://feed-request-endpoint-url.example",
                        "method": "POST"
                    }
                }
            },
            "serviceEndpointFeedAccessRequest": {
                "value": {
                    "SjF1RFBNam14RmxEcW8rOVdzNkpHd1RZaFdBPQ==": {
                        "input": "Im9wdGlvbmFsIG9wZXJhdGlvbiBib2R5IGVuY29kZWQgYXMgYSBiYXNlNjQgZW5jb2RlZCBieXRlIGFycmF5Ig=="
                    }
                }
            },
            "serviceEndpointFeedRequest": {
                "value": {
                    "connection": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid3dp1connectionUrl",
                    "message": {
                        "inbound": true,
                        "protocol": "https://github.com/qiyfoundation/fiKks/tree/master/schema/v1",
                        "sent": false,
                        "serialNr": 6,
                        "text": "Requesting 'test data'",
                        "thirdPartyRef": " 4D0OqePJ1yKD41Q9qmixVnVFLWcJHFT1hhKDKG9FmeI="
                    },
                    "mbox": "https://qiy-test-tool-dpyt.cloud.digital-me.nl/qiy_nodes/qiy_node_api/proxy/v1/pid3dp1connectionMbox",
                    "pid": "1IqX94/EoOcD47hCvBQ+gi=="
                }
            },
            "stateHandledEvent": {
                "value": {
                    "type": "STATE_HANDLED",
                    "connectionUrl": "https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/3b5151e3-adc7-403a-a31a-8bd504e2c8ae",
                    "extraData": {
                        "newUri": "https://dev1-user.testonly.digital-me.nl/user/connections/user/509f79f8-6562-49cd-bb24-4163557d7e59/ce5b2dd5-1bdd-41aa-b0ad-d0afa2e9a3cb",
                        "connectToken": "https://dev1-user.testonly.digital-me.nl/user/connecttokens/509f79f8-6562-49cd-bb24-4163557d7e59/7ced41dc-76ff-469e-9fa0-3f34c73d0a2b",
                        "PID": "9GqX94/EoOcD47hCvBQ+eg=="
                    }
                }
            }
        },
        "securitySchemes": {
            "appAuthentication": {
                "$ref": "#/components/schemas/appAuthentication"
            },
            "transportAuthentication": {
                "$ref": "#/components/schemas/transportAuthentication"
            },
            "userAuthentication": {
                "$ref": "#/components/schemas/userAuthentication"
            }
        },
        "callbacks": {
            "accessFeed": {
                "$serviceEndpointUrl": {
                    "post": {
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/serviceEndpointFeedAccessRequest"
                                    },
                                    "examples": {
                                        "example": {
                                            "$ref": "#/components/examples/serviceEndpointFeedAccessRequest"
                                        }
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                }
            },
            "dataReferenceReceivedv2": {
                "$dataReferenceReceivedv2EndpointUrl": {
                    "post": {
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/dataReferenceReceivedv2Event"
                                    },
                                    "examples": {
                                        "example": {
                                            "$ref": "#/components/examples/dataReferenceReceivedv2Event"
                                        }
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                }
            },
            "feedRequest": {
                "$serviceEndpointUrl": {
                    "post": {
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/serviceEndpointFeedRequest"
                                    },
                                    "examples": {
                                        "example": {
                                            "$ref": "#/components/examples/serviceEndpointFeedRequest"
                                        }
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                }
            },
            "stateHandled": {
                "$stateHandledCallbackEndpointUrl": {
                    "post": {
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/stateHandledEvent"
                                    },
                                    "examples": {
                                        "example": {
                                            "$ref": "#/components/examples/stateHandledEvent"
                                        }
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                }
            }
        },
        "x-events": {
            "dataReferenceReceivedv2": {
                "description": "See [Data Reference Received-v2 Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#data-reference-received-v2-event)",
                "event": "DATA_REFERENCE_RECEIVED2",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/dataReferenceReceivedv2Event"
                    },
                    "examples": {}
                }
            },
            "routingFailed": {
                "description": "See [Routing Failed Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#routing-failed-event)",
                "event": "ROUTING_FAILED",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/routingFailedEvent"
                    }
                }
            },
            "stateHandled": {
                "description": "See [State Handled Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#state-handled-event)",
                "event": "STATE_HANDLED",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/stateHandledEvent"
                    }
                }
            },
            "userActionMessage": {
                "description": "See [User Action Message Event](https://github.com/qiyfoundation/Qiy-Scheme/blob/topic/oas/Qiy-Node/Qiy%20Node%20API.md#user-action-message-event)",
                "event": "USER_ACTION_MESSAGE",
                "data": {
                    "schema": {
                        "$ref": "#/components/schemas/userActionMessageEvent"
                    },
                    "examples": {
                        "example": {
                            "type": "USER_ACTION_MESSAGE",
                            "connectionUrl": "https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e",
                            "extraData": "https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4"
                        }
                    }
                },
                "examples": {
                    "example": "event: USER_ACTION_MESSAGE\ndata: { \"type\": \"USER_ACTION_MESSAGE\", \"connectionUrl\": \"https://dev1-user.testonly.digital-me.nl/user/connections/user/wip_feed_ind/e33b7dcc-a1f1-4195-893d-97698f0e4d8e\", \"extraData\": \"https://dev1-user.testonly.digital-me.nl/user/mbox/user/action/wip_feed_ind?amid=4\"}\n"
                }
            }
        }
    },
    "security": [
        {
            "appAuthentication": []
        },
        {
            "userAuthentication": []
        }
    ]
}
